静态库和动态库在使用、链接、依赖性有显著区别，主要为：
编译和链接方式：静态库在编译时会被直接整合到目标程序中，因此生成的可执行文件会比较大。而动态库在编译时并不会被整合到目标程序中，而是在程序运行时动态加载，因此生成的可执行文件相对较小。
依赖性：静态库被编译进目标程序后，就不再需要外部的库文件支持，因此没有依赖性。而动态库在运行时需要加载到内存中，因此程序对动态库有依赖性，如果运行时没有找到对应的动态库，程序就无法正常运行。
升级和更新：由于静态库被直接编译进目标程序，所以如果静态库更新了，那么使用它的程序也需要重新编译。而动态库的更新则不需要重新编译程序，只需要替换掉旧的动态库文件即可。
扩展名：静态库的扩展名一般为“.a”或“.lib”，而动态库的扩展名一般为“.so”或“.dll”。
加载速度：由于静态库在编译时就已经整合到程序中，所以加载速度相对较快。而动态库需要在程序运行时加载，所以加载速度相对较慢。
空间占用：由于静态库被整合到程序中，所以会占用更多的磁盘空间。而动态库则可以被多个程序共享使用，所以相对来说更加节省磁盘空间。
总的来说，静态库和动态库各有优缺点，选择使用哪种类型的库取决于具体的需求和场景。例如，如果希望减少程序的依赖性并提高加载速度，可以选择使用静态库；如果希望节省磁盘空间并方便升级和更新，可以选择使用动态库。