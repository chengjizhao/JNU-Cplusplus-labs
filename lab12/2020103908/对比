静态库（Static Library）和动态库（Dynamic Library）是两种不同类型的库文件，它们在C++中有一些关键的区别。以下
是它们的主要区别：
1. 静态库（Static Library）：
文件扩展名：通常以.lib（在Windows）或.a（在Unix/Linux）为扩展名。
链接时：在编译时被链接到目标程序中。链接过程将库的代码和数据复制到可执行文件中。
内存占用：整个库的内容被复制到可执行文件中，因此可执行文件较大。
执行文件独立性：生成的可执行文件不依赖于外部库，因为库的代码已经被复制到可执行文件中。
更新：如果库的代码或数据发生变化，应用程序需要重新编译以使用更新后的库。
符号冗余：如果多个可执行文件使用相同的静态库，每个可执行文件都会包含库的一份副本，可能导致符号冗余。
2. 动态库（Dynamic Library）：
文件扩展名：通常以.dll（在Windows）或.so（在Unix/Linux）为扩展名。
链接时：在运行时动态加载到内存中，不会在编译时复制到可执行文件中。
内存占用：与静态库相比，动态库的内存占用更加灵活，因为它只在运行时加载需要的部分。
执行文件独立性：可执行文件在运行时依赖于动态库，因此需要确保在运行环境中存在相应的动态库。
更新：如果库的代码或数据发生变化，应用程序无需重新编译，只需要替换动态库文件即可。
符号冗余：多个可执行文件共享同一份动态库，因此可以减少符号冗余。
运行时灵活性：允许在不重新编译应用程序的情况下更新或切换库的版本。
总的来说，选择使用静态库还是动态库取决于项目的具体需求。静态库通常使得可执行文件更加独立，但可能导致较大的可
执行文件和符号冗余。动态库则提供了更大的灵活性，允许在运行时更新库，但需要确保库文件在运行环境中可用。
