第一章 温故而知新
  1.1 从Hello World说起
    利用Hello World程序，提出一系列问题。引发读者思考，从而开始回顾计算机系统的基本概念。

  1.2 万变不离其宗
    介绍计算机的重要组成：中央处理器CPU，内存和I/O控制芯片。讲述了CPU的发展优化过程。

  1.3 站的高，望的远
    介绍了系统软件的体系结构，并解释了接口的概念。

  1.4 操作系统做什么
    操作系统提供抽象的接口，管理硬件资源。
    1.4.1 不要让cpu打盹
   抢占式分配CPU资源，使CPU在多个进程间快速切换，提高了cpu的利用率。
    1.4.2 设备驱动
  介绍操作系统和驱动程序的关系。

  1.5 内存不够怎么办
    当计算机同时运行多个程序，需要将计算机有限的物理内存分配给多个程序使用，就涉及到内存的分配问题。若直接按物理地址进行内存分配，会存在地址空间不隔离、内存使用效率低和程序运行地址不确定等问题。因此采取虚拟地址来对内存进行分配。
    1.5.1 关于隔离
      普通的程序需要的是简单的执行环境，有单一的地址空间，无需关心其他程序。虚拟地址空间是指想象出来的地址空间，实际并不存在，每个进程都有白己独立的虚拟空间，而且每个进程只能访问自已的地址空间，就做到了进程的隔离。
    1.5.2 分段
      把程序需要的虚拟空间映射到某个地址空间，虚拟空间和物理空间的每个字节一一对应。但分段并不能解决内存使用效率的问题，需要通过分页来解决。
    1.5.3 分页
   把地址空间人为地等分成固定大小的页，把进程的虚拟地址空间按页分割，常用的数据和代码页装载到内存中，不常用的保存在磁盘里，实现内存共享。

  1.6 众人拾柴火焰高
    1.6.1 线程基础
     线程概念： 一个标准的线程由线程ID、当前指令指针、寄存器集合和堆栈组成。一个进程由一个到多个线程组成。
      线程的执行状态：等待，就绪，运行。
	 在优先级调度的环境下，线程的优先级改变：用户指定优先级、根据进入等待状态的频繁程度提升或降低优先级、长时间得不到执行而被提升优先级。
    1.6.2 线程安全
      讲述了线程安全的一些措施，利用锁，读写锁，信号量，条件变量，原子操作。

第六章 可执行文件的装载与进程
  6.1进程虚拟地址空间
	程序是静态的，进程是动态的。进程是程序运行时的一个过程，程序是预先编译好的指令和数据的集合。程序都是运行在虚拟地址空间中的。

  6.2装载的方式
    程序执行时所需的指令和数据必须在内存中在能正常运行，若把它们全部装入内存，内存可能不够，因此可以将常用部分驻留在内存中，不常用的放在磁盘中，即动态装入。覆盖装入和页映射是两种典型的方法。
    6.2.1 覆盖装入
      已基本淘汰，在嵌入式下还有用武之地。覆盖装入即通过覆盖管理器来管理被分成若干块的模块。程序员需要手工将模块根据依赖关系组织成树状结构，当其中某个模块被调用时，整个调用路径的模块必须在内存中。
    6.2.2 页映射
把磁盘中所有数据和指令以页为单位进行划分，装载用的也是页。

  6.3从操作系统角度看可执行文件的装载
    6.3.1 进程的建立
   创建虚拟地址空间：分配一个页目录；
    读取可执行文件头，并建立虚拟空间与可执行文件的映射关系；
    将CPU指令寄存器设置成可执行文件入口，启动运行。
    6.3.2 页错误
      CPU执行到空页面产生页错误，将控制权交给操作系统处理该错误。

  6.4进程虚存空间分布
    段的权限分类：
    以代码段为代表的权限为可读可执行权限；
     以数据段和BSS段为代表的权限为可读可写的段；
     以只读数据段为代表的权限为只读的段。
    进程虚拟地址空间：操作系统通过给进程空间划分处一个个VMA来管理进程的虚拟空间，将相同权限属性、相同映像文件映射成一个VMA。
    
  6.5Linux内核装载ELF过程简介
	bash进程调用fork()创建新进程，新进程再调用execve()系统调用执行ELF文件。
 
  6.6VindowsPE的装载
   PE文件的段的起始地址和长度都是页的整数倍。每个PE文件都会被装载到某一特定地址，即目标地址/基地址。



