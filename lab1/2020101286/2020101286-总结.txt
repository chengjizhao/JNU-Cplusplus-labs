阅读总结
第一章温故而知新通过hello world的C程序引出一些相关问题，介绍了计算机系统的基本构成和运行机制。它由输入设备、中央处理器（CPU）、内存和输出设备组成，通过不同的组件协同工作来完成各种任务，后介绍了计算机的硬件组成。此外，作者还讲解了内存的层次结构，从高速缓存到主存再到辅助存储器，通过不同级别的存储器来满足不同的需求。当内存不够时，可以通过分段和分页来解决这个问题。
本章深入讨论了操作系统的作用和功能。作者解释了操作系统是如何管理计算机资源、调度进程和提供用户界面的，以及操作系统与应用程序之间的交互关系。此外，作者还介绍了操作系统的层次结构和常见的操作系统类型，如批处理系统、分时系统和实时系统等。
最后，本章还介绍了计算机网络的基本概念。作者解释了CPU开始往多核发展，这其中最重要的方法就是线程。介绍线程的访问权限、线程调度与优先级、线程的安全等各个方面，让读者能够非常详细地了解线程的信号量、运行方式和内部情况等。
本书第一章通过生动的例子和清晰的讲解，对计算机硬件、操作系统和网络等方面有了整体的认识，尤其是CPU与外围部件的连接方式、SMP与多核、软硬件层级体系结构等，以及一些与系统软件十分相关的基础概念。对于自动化这种有学习硬件方面知识的专业，学习回顾计算机的软硬件基本结构，了解计算机的工作原理，对我们学习C和C++能够奠定基础，同时也让我们更容易理解计算机系统是如何工作和运行的。长期以来，很多时候我们学习一种编程语言只是浮于表面，没有很深层地进行对于计算机最基础知识的了解，这一章能让初学者很好地解决这一问题。
第六章可执行文件的装载与进程通过进程虚拟地址空间、装载的方式、从操作系统角度看执行文件的装载、进程虚存空间分布、Linux内核装载ELF过程简介、Windows PE的装载六个小节来介绍相关内容。
本章由进程虚拟地址空间展开，先介绍程序和进程的区别，然后通过地址的分配，将内存分成不同的地址，从而实现虚拟地址空间的构建。然后就是本章重点介绍了C语言中一个非常重要的概念——指针。作者详细解释了指针的含义和作用，以及指针与数组、结构体等数据类型的关系。他还介绍了指针运算、指针的传递和返回等相关知识，帮助我们能够更好地理解指针在C语言中的重要性和以及其带给我们编程的灵活和简便。
随后，本章深入讨论了内存管理的问题。作者解释了内存的分配和释放过程，包括静态内存和动态内存的概念，以及映射的关系。还介绍了堆和栈的区别，尤其是通过不同堆栈段的图片来演示内存运行工作例如进栈和出栈、段地址对齐等的过程和原理，让读者能够非常直观地看到堆栈的运行方式，从而更好地了解、学习和应用C语言。最后，本章还介绍了不同系统程序的交互，Linux和Windows程序如何装载运行ELF和PE程序。
第六章介绍了程序运行时如何使用内存空间，进程虚拟地址空间的分布，以及不同系统程序装载运行两种程序。通过清晰的图例讲解和实例代码，详细介绍了C语言和汇编语言的相关知识。它帮助我深入了解C语言的特性和灵活性，学会使用指针进行高效的内存管理，并了解如何与汇编语言进行交互，从而更好地掌握底层编程技术。
