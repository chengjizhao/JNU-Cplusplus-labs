    第一章从Hello World程序引入，提出了一系列程序运行背后的问题，这些问题我都无法做出解释和回答，让我了解到了自
己对于系统程序知识了解的薄弱，另外还介绍了计算机软硬件的基本概念。计算机硬件包括CPU，存储器和I/O设备，此外还介绍
了可以提高CPU速率的对称多处理器SMP和多核处理器。计算机软件包括系统软件和应用程序，在1.3节中介绍了计算机系统软件体
系结构采用的一种层结构，重点强调了接口的定义。下层作为接口的定义者提供接口，上层是接口的使用者实现功能，除了硬件
和应用程序，其他都是中间层，如API是运行库的上层，应用程序是API的上层，正是有中间层的存在，应用程序和硬件之间才可
以保持相对的独立。1.4节主要介绍操作系统的功能，从CPU、存储器和I/O设备三个方面分析了如何尽可能的发挥计算机硬件的
潜能。1.5节通过介绍物理地址、虚拟地址和页映射的概念分析了如何处理内存不够的问题。此外在1.6节还详细通过线程的访问
权限、调度和优先级等介绍了线程这一概念，还引出了多线程进程和三种线程模型。
   第六章介绍了可执行文件的装载和进程，通过介绍进程虚拟地址空间、页映射方式将程序映射到进程地址空间等，从操作系统
角度分析了可执行文件的装载，解释了程序是如何被装载到内存中运行的。在6.1中主要介绍了进程虚拟地址空间的分配，进程只
可访问分配到的地址，否则会产生“segmentation fault”。还分析了操作系统可以通过窗口映射的方法去解决应用程序的地址空
间不够大的问题。在6.2中介绍了利用程序局部性原理的两种动态装载方法，主要强调了页映射方法，将可执行文件的页装入内存
的页。然后在6.3中从操作系统角度分析可执行文件的装载过程和它在进程中的执行。其中最关键的是建立虚拟空间与可执行文件
的映射关系和建设虚拟空间与物理内存的映射关系，强调了VMA虚拟段的概念。在6.4节中回答了如何减少页映射造成的内存浪费
的问题，辨析了segment和section这两个概念，多个属性类似的section的合并成一个segment并映射到同一个VMA，这样就可以
节省很多虚拟空间。在建立物理内存和进程虚拟地址空间的映射关系时可以通过段地址的对齐方式来节省空间。此外还具体介绍
了Linux内核装载ELF和Windows装载PE两个案例，PE文件映射无需考虑短地址对齐问题并且会在产生可执行文件时尽可能合并段。
对第六章内容我还有很多不理解之处，很多基本专业名词术语和一些可执行文件例子都不懂，也无法迅速有效的回想前文有关知
识信息。
