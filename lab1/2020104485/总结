第一章：温故而知新
本章介绍了计算机的基本组成和操作系统的功能，以及解决程序运行过程中的问题所涉及的概念。以下是每个小节的总结：

1.1 从Hello World说起：
通过提出一系列问题，并留下未答之谜，引导读者思考计算机的工作原理和软件开发的复杂性。

1.2 万变不离其宗：
介绍计算机的核心组件，包括中央处理器（CPU）、内存和I/O控制芯片，并提到南桥和北桥芯片的设计以协调硬件设备之间的工作和多核处理器的发展。

1.3 站的高，望的远：
讲解系统软件的体系结构，其中关键的概念是接口，用于连接不同组件和层次之间的通信和交互。

1.4 操作系统做什么：
阐述操作系统的作用，即提供抽象的接口并管理硬件资源。子节"1.4.1 不要让 CPU 打盹"介绍了多道程序设计和分时系统，以及抢占式的 CPU 分配方式如何提高 CPU 的利用率。子节"1.4.2 设备驱动"讨论了操作系统管理硬件设备的需求，以及通过硬件抽象和设备驱动来处理多样性和统一访问的问题。

1.5 内存不够怎么办：
当计算机运行多个程序时，需要合理分配有限的物理内存。介绍了使用虚拟地址来解决内存分配问题和虚拟地址空间的概念。子节"1.5.1 关于隔离"解释了进程的隔离和虚拟地址空间的作用。"1.5.2 分段"和"1.5.3 分页"探讨了分段和分页技术的应用，以提高内存使用效率。

1.6 众人拾柴火焰高：
"1.6.1 线程基础"介绍了线程的概念、组成和执行状态，以及线程调度和优先级的重要性。"1.6.2 线程安全"讨论了实现多线程安全性的方法，包括锁、读写锁、信号量、条件变量和原子操作等。

第六章：可执行文件的装载与进程
本章主要讲解了可执行文件的装载过程和进程的虚拟地址空间的分布。以下是每个小节的总结：

6.1 进程虚拟地址空间：
介绍了进程的虚拟地址空间以及其大小由计算机硬件决定，并说明了使用地址扩展方式（PAE）可以访问更多的物理内存。

6.2 装载的方式：
讨论了程序装载进内存的方式，包括动态装入、覆盖装入和页映射。子节"6.2.1 覆盖装入"介绍了由于内存限制而需手动管理模块的覆盖装入方式。"6.2.2 页映射"说明了将数据和指令按页分割，并通过选择算法来保持内存中的页的合适数量。

6.3 从操作系统角度看可执行文件的装载：
介绍了操作系统在进程建立过程中的几个主要步骤，包括创建虚拟地址空间、读取可执行文件头并建立虚拟空间与可执行文件的映射关系，以及设置CPU指令寄存器和启动运行的步骤。

6.4 进程虚存空间分布：
讨论了对段进行权限分类，并说明了合并相同权限的段以减少空间浪费的方法。通过划分虚拟内存空间中的VMA（虚拟内存区域）来管理进程的虚拟空间，将具有相同权限属性和映像文件的段映射为一个VMA。

6.5 Linux内核装载ELF过程简介：
简要描述了Linux内核在装载可执行文件时的步骤，包括创建虚拟地址空间、读取可执行文件头部信息以及设置指令入口等。

6.6 Windows PE的装载：
介绍了Windows PE可执行文件的装载过程。
