第一章 温故而知新
  1.1 从Hello World说起
    利用Hello World程序，提出一系列问题，但并未给出答案，大部分问题我也不能给出答案。

  1.2 万变不离其宗
    介绍计算机的重要组成：中央处理器CPU，内存和I/O控制芯片。为了协调CPU，内存和高速的图形设备，设计出了南桥和北桥芯片，cpu频率也逐步提高，触碰到了天花板。于是有了多核处理器。

  1.3 站的高，望的远
    介绍了系统软件的体系结构，并解释了接口的概念。

  1.4 操作系统做什么
    提供抽象的接口，管理硬件资源。
    1.4.1 不要让cpu打盹
      利用多道程序和分时系统和抢占式的cpu分配方式，提高了cpu的利用率。
    1.4.2 设备驱动
      操作系统需管理硬件设备，由于设备种类繁多，访问方式不统一。因此，将硬件抽象成一系列概念，将繁琐的硬件细节交给硬件驱动。

  1.5 内存不够怎么办
    当计算机同时运行多个程序，需要将计算机有限的物理内存分配给多个程序使用，就涉及到内存的分配问题。若直接按物理地址进行内存分配，会存在地址空间不隔离、内存使用效率低和程序运行地址不确定等问题。因此采取虚拟地址来对内存进行分配。
    1.5.1 关于隔离
      普通的程序需要的是简单的执行环境，有单一的地址空间，无需关心其他程序。虚拟地址空间是指想象出来的地址空间，实际并不存在，每个进程都有白己独立的虚拟空间，而且每个进程只能访问自已的地址空间，就做到了进程的隔离。
    1.5.2 分段
      把程序需要的虚拟空间映射到某个地址空间，虚拟空间和物理空间的每个字节一一对应。但分段并不能解决内存使用效率的问题，需要通过分页来解决。
    1.5.3 分页
      把进程的虚拟地址空间按页分割，常用的数据代码装载到内存，不常用的保存在磁盘。虚拟空间的页就叫虚拟页,把物理内存中的页叫做物理页,磁盘中的页叫做磁盘页。

  1.6 众人拾柴火焰高
    1.6.1 线程基础
      一个标准的线程由线程ID、当前指令指针、寄存器集合和堆栈组成。一个进程由一个到多个线程组成。
      线程的执行状态：等待，就绪，运行。
      线程调度，每个线程都被分配了一定的时间片和优先级。
    1.6.2 线程安全
      讲述了线程安全的一些措施，利用锁，读写锁，信号量，条件变量，原子操作。

第六章 可执行文件的装载与进程
  6.1进程虚拟地址空间
    
  6.2装载的方式
  6.3从操作系统角度看可执行文件的装载
  6.4进程虚存空间分布
  6.5Linux内核装载ELF过程简介
  6.6VindowsPE的装载
