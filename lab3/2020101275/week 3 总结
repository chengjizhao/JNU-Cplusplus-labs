STL常见容器
序列式容器

1. vector（array）
vector, vector 与数组array类似。顺序存储容器，也被称为单端数组，只能从尾部增删元素
array不可改变容器的大小，空间不足时需创造更大的空间，并把之前的数据拷贝到新空间中。
vector使用更加灵活的动态空间。在空间不足的时候，vector可以自动扩展空间容纳新元素，做到按需供给。在扩充空间的过程中仍然需要的是，重新分配空间、移动数据、释放原空间
使用场景：随机访问已知数目的存储元素

2. deque
deque是双端开口的容器。两端都可以插入删除元素，但访问速度比vector慢。

3.queue
先进先出的单端开口存储器，只能从尾部插入，头部删除
使用场景：需要进行先进先出处理时

4. List
list是环状双向链表，相当于vector的连续空间，list的空间是分散的，可以动态分配存储，对空间的利用很精确。
forward_list是C++11中实现的单向链表，其他方面与list的差异不大。
使用场景：用于查找元素或在任意位置插入删除元素。

5.stack
stack是先进后厨的数据结构，只有一个出口，只能在栈顶插入或删除元素

关联式容器
1.map/set
map中所以的元素都是pair类型，它拥有key（键值）和value（实值）两个属性，是一种一对一的关系。map中的元素会根据键值来进行自动排序。map的底层实现是红黑树，不能有重复元素。
set的底层实现也是使用红黑树，所有元素在插入时被自动排序，且set中不允许有重复值，
使用场景：当需要使用非int类型的数据作为下标时，可以使用map
对数据有排列要求且数据不重复时可使用set

2. multimap/multiset
multimap与multiset底层使用的都是红黑树，只不过在插入元素的时候，调用的是红黑树的insert_equal()函数，所以可以有重复元素。
