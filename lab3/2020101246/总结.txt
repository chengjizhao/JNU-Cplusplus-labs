我知道的STL标准容器主要有以下几种：
    vector：vector是一个动态数组，它的特点是支持随机访问，也就是说在内存中的单元是连续的。当向一个vector中继续存放数据时，如果当前的内存大小不够，内核会重新生成一个是原来两倍的大小的单元，之后将数据从原先的单元中拷贝至新创建的单元中，并将原来的单元释放掉。因此，查询效率高。但是当向其分非尾部插入元素时，因内存单元需要移动数据元素，所以插入的效率比较低。vector适用于对象简单，变化较小，并且频繁随机访问的场景。
    deque：deque使用场景是要进行先进先出的场景，比如排队购票系统。deque支持头端的快速移除和尾端的快速添加。如果采用vector，在头端移除元素时，会移动大量的数据，速度慢。在大量数据的情况下, deque效率更高。 deque的开始位置是不固定的，这是它的一个优点。它适用于进行频繁的插入和删除操作的场景。
    list：list使用场景比如公交车乘客的存储，随时可能有乘客下车，支持频繁的不确实位置元素的移除插入。它是一个双向链表，支持在任何位置进行快速插入和删除操作。
    set：set使用场景比如对手机游戏的个人得分记录的存储，存储要求从高分到低分的顺序排列。set是一个关联容器，它包含的元素都是唯一的，这使得set成为存储和检查集合的理想选择。
    map：map使用场景比如按ID号存储十万个用户，想要快速要通过ID查找对应的用户。map是一个关联容器，每个元素都包含一个键值对，这使得map对于基于键的数据快速查找非常有用。例如，按照关键字来查找相关信息等场景。
  但是总的来说，各种容器都有其独特的特点和适用场景，具体选择哪种容器取决于具体应用的需求。