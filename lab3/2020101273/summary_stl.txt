1. vector:动态数组，可以自动扩展容量，随机访问性能良好，适用于需要频繁插入和删除元素的场景。
2. list:双向链表，插入和删除元素的时间复杂度为 O(1),适用于需要频繁插入和删除元素的场景。
3. map:基于红黑树实现，键值对有序存储，插入、删除和查找的时间复杂度为 O(log N),适用于需要根据键值进行查找的场景。
4. set:基于红黑树实现，元素有序存储，插入、删除和查找的时间复杂度为 O(log N),适用于需要根据元素进行查找的场景。
5. string:字符串类，可以动态扩展容量，字符串操作函数丰富，适用于需要处理字符串的场景。
6. array:静态数组，可以指定初始化大小，适用于需要预先知道容器大小的场景。
7. unordered_map 和 unordered_set:基于哈希表实现，插入、删除和查找的时间复杂度为 O(1),但是数据无序存储，适用于需要快速查找和插入元素的场景。