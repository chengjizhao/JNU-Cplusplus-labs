STL
1.vector典型的序列容器，C++标准严格要求次容器的实现内存必须是连续的，唯一可以和标准C兼容的st容器，任意元素的读取、修改具有常数时间复杂度，在序列尾部进行插入、删除是常数时间复杂度，但在序列的头部插入、删除的时间复杂度是O(n)，可以在任何位置插入新元素，有随机访问功能，插入删除操作需要考虑。适用于需要高效地在末尾插入和删除元素，同时需要随机访问元素的场景。
2.deque字列容器，内存也是连续的，和vector相似，区别在于在序列的头部插入和删除操作也是常数时间复杂度,可以在任何位置插入新元素，有随机访问功能。适用于需要在两端高效插入和删除元素，同时需要随机访问元素的场景。
3.set序列容器，内存是不连续的，任意元素的访问、修改时间复杂度是O(n)，插入、删除操作是常数时间复杂度可以在任何位置插入新元素。适用于需要高效地插入、删除和查找元素，并且需要保持元素有序且不重复的场景。
4.list关联容器，元素不允许有重复，数据被组织成一棵红黑树，查找的速度非常快，时间复杂度是O(logN)。适用于需要频繁在任意位置插入和删除元素，但不需要随机访问元素的场景。
5.multiset关联容器，和set一样，却别是允许有重复的元素，具备时间复杂度O(logN)查找功能。
6.map关联容器，按照f键，值1方式组成集合，按照键组织成一棵红黑树，查找的时间复杂度O/logN)，其中键不允许重复。适用于需要高效地插入、删除和查找键值对，并且需要根据键进行有序访问的场景。
7.multimap和map一样，区别是键可以重复。



