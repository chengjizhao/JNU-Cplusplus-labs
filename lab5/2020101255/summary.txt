第九章
一种有效的组织策略是，使用头文件来定义用户类型，为操纵用户类型的函数提供函数原型，并将函数定义放在一个独立的源代码文件中。头文件和源代码文件一起定义和实现了用户定义的类型及其使用方式。最后，将main( )和其他使用这些函数的函数放在第三个文件中。静态变量在整个程序执行期间都存在。对于在函数外面定义的变量，其所属文件中位于该变量的定义后面的所有函数都可以使用它，并可在程序的其他文件中使用。另一个文件要使用这种变量，必须使用extern关键字来声明它。对于文件间共享的变量，应在一个文件中包含其定义声明，并在其他文件中包含引用声明。在函数的外面使用关键字static定义的变量的作用域为整个文件，但是不能用于其他文件。在代码块中使用关键字static定义的变量被限制在该代码块内，但在整个程序执行期间，它都一直存在并且保持原值。
第十章
类是用户定义的类型，对象是类的实例。这意味着对象是这种类型的变量，例如由new按类描述分配的内存。C++试图让用户定义的类型尽可能与标准类型类似，因此可以声明对象、指向对象的指针和对象数组。可以按值传递对象、将对象作为函数返回值、将一个对象赋给同类型的另一个对象。如果提供了构造函数，则在创建对象时，可以初始化对象。如果提供了析构函数方法，则在对象消亡后，程序将执行该函数。私有变量被封装在类的内部，外部代码只能通过公有的成员函数来访问和修改私有变量，从而保证了类的封装性和数据的安全性。