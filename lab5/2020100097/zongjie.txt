第九章
有效的组织策略包括使用头文件来定义用户类型，提供函数原型，并将函数定义放在独立的源代码文件中。头文件和源文件共同定义和实现了用户定义的类型及其使用方式。此外，将main()和其他使用这些函数的函数放在第三个文件中。静态变量在整个程序执行期间都存在。对于在函数外部定义的变量，其所属文件中位于该变量的定义后面的所有函数都可以使用它，并可在其他文件中使用。若其他文件要使用这种变量，必须使用extern关键字进行声明。对于需要在多个文件中共享的变量，应在一个文件中进行定义和声明，并在其他文件中进行引用声明。在函数外部使用static关键字定义的变量的作用域为整个文件，但不能用于其他文件。在代码块中使用static关键字定义的变量仅在该代码块内有效，但在整个程序执行期间，它都一直存在并保持原值。
第十章
类是用户定义的类型，而对象则是类的实例。这意味着对象是该类型的变量，例如通过按类描述分配的内存进行new操作所创建的对象。C++尽可能地让用户定义的类型与标准类型相似，因此允许声明对象、指向对象的指针和对象数组。可以通过按值传递对象、将对象用作函数返回值或将一个对象分配给同类型的另一个对象。如果提供了构造函数，则在创建对象时可以初始化对象。如果提供了析构函数，则在对象销毁后，程序将执行该函数。私有变量被封装在类的内部，外部代码只能通过公有的成员函数来访问和修改私有变量，从而确保了类的封装性和数据的安全性。