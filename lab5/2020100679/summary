第9章：类和对象

1. 类(class)是一种用户自定义的数据类型，用于封装数据和相关操作。它由数据成员和成员函数组成。
2. 对象(object)是类的一个实例，可以通过创建类的对象来使用类的功能。
3. 类的成员可以是公有(public)、私有(private)或保护(protected)的。公有成员可以被外部访问，私有成员只能在类内部访问，保护成员在派生类中可访问。
4. 类的声明通常包括数据成员和成员函数的原型，而类的定义则包括成员函数的实现。
5. 构造函数(constructor)是一种特殊的成员函数，用于创建对象时进行初始化操作。析构函数(destructor)用于在对象销毁时执行清理工作。
6. 成员函数可以定义在类内部，也可以在类外部进行定义。如果在类外部定义成员函数，需要使用范围解析运算符(::)指定所属的类。
7. 类的访问控制关键字包括`public`、`private`和`protected`，用于控制成员的访问权限。
8. 类的声明可以放在头文件中，而定义则通常放在源文件中。

第10章：类的高级特性

1. 类的构造函数可以被重载，即可以有多个具有不同参数的构造函数。可以使用构造函数初始化列表来进行成员变量的初始化。
2. 深拷贝(deep copy)和浅拷贝(shallow copy)是关于对象拷贝的概念。深拷贝会复制动态分配的资源，而浅拷贝只是简单地将指针指向相同的资源。
3. 友元函数(friend function)是在类外部声明但可以访问类的私有成员的函数。友元函数可以用于操作类的私有成员或提供对类的特殊访问权限。
4. 静态成员(static member)属于整个类而不是类的某个对象，使用类名加范围解析运算符(::)来访问。
5. 类的常量成员(const member)是在类中声明为常量的成员变量，它们在对象创建时就被初始化，并且无法修改。
6. 类的静态常量成员(static const member)是属于整个类的常量，可以通过类名和作用域解析运算符(::)来访问。
7. 类的枚举(enum)是一种定义命名常量的方式，可以用于创建一组相关的命名值。
8. 类的自动转换和强制类型转换可以通过重载运算符实现。例如，重载`+`运算符可以使两个对象相加。
9. 类的继承(inheritance)允许创建一个新类，该类继承了现有类的属性和方法。派生类可以访问基类的公有成员，但不能直接访问基类的私有成员。
10. 虚函数(virtual function)是一种在基类中声明的特殊函数，可以在派生类中进行重写。通过使用虚函数，可以实现运行时多态性。
