-多继承
虚基类表是为了记录虚基类在派生类对象中的偏移量而存在的。每个含有虚基类的派生类会有一个对应的虚基类表，其中存储了虚基类的偏移量。在派生类对象中，虚基类子对象的布局是由编译器来决定的。编译器会根据虚基类的顺序和继承关系，将虚基类子对象放置在派生类对象的最前面，以确保该虚基类只有一份拷贝。虚基类指针是一个隐藏的指针，在派生类对象中用于定位虚基类子对象。当通过派生类对象访问虚基类成员时，编译器会使用虚基类指针来定位到虚基类子对象，从而可以正确地访问虚基类的成员。在派生类的构造函数中，编译器会自动生成对虚基类构造函数的调用，确保虚基类子对象被正确地构造。而在派生类的析构函数中，编译器也会自动生成对虚基类析构函数的调用，确保虚基类子对象被正确地析构。

-第十四章
私有继承和保护继承也使得能够重用基类的代码，但建立的是has-a关系。使用私有继承时，基类的公有成员和保护成员将成为派生类的私有成员；使用保护继承时，基类的公有成员和保护成员将成为派生类的保护成员。无论使用哪种继承，基类的公有接口都将成为派生类的内部接口。这有时候被称为继承实现，但并不继承接口，因为派生类对象不能显式地使用基类的接口。因此，不能将派生对象看作是一种基类对象。由于这个原因，在不进行显式类型转换的情况下，基类指针或引用将不能指向派生类对象。
