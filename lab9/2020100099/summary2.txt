C++ Prime Plus 第14章主要涵盖了继承和多态的概念，包括类的派生、虚函数、多态性以及动态绑定等内容。以下是该章节的关键内容总结：
1. 继承（Inheritance）：允许一个类从另一个类继承成员变量和成员函数，并且可以添加新的数据成员和成员函数。派生类（Derived class）继承自基类（Base class）。
2. 多态性（Polymorphism）：当使用指向基类对象的指针时，可以通过这些指针来调用派生类对象的成员函数。这种行为被称为多态性，它允许在运行时根据对象的类型来选择正确的函数。
3. 虚函数（Virtual functions）：通过将成员函数声明为虚函数，可以实现多态性。在基类中声明虚函数，在派生类中覆盖（重写）该虚函数，使得可以在运行时根据对象的类型调用正确的函数版本。
4. 动态绑定（Dynamic binding）：在运行时根据对象的类型来选择调用的函数，而不是在编译时确定。这样可以实现多态性，确保对于派生类对象调用正确的函数。
5. 抽象基类（Abstract base classes）：包含纯虚函数的类被称为抽象基类。抽象基类不能被实例化，但可以作为其他类的接口，派生类必须实现所有的纯虚函数。
6. 对象切片（Object slicing）：当派生类对象被赋值给基类对象时，派生类对象的额外信息会被“切掉”，导致只有基类部分的信息被复制到基类对象中。
7. 虚基类（Virtual base classes）：解决菱形继承问题的一种方法，通过将共同的基类声明为虚基类，确保在派生类中只有一份虚基类的实例。
