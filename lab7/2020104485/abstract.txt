第十一章：
1.	c++允许将运算符重载扩展到用户定义的类型。op必须是有效的c++运算符，不能虚构一个新的符号。
2.	在运算符表示法中，运算符左侧的对象是调用对象，运算符右边是作为参数被传递的对象。
3.	重载限制：重载的运算符不必是成员函数，但必须至少有一个操作数是用户定义的类型。
4.	创建友元：第一步是将其原型放在声明中，并在原型声明前加上关键字friend。第二步是编写函数定义。
5.	加法运算符需要两个操作数。对于成员函数版本来说，一个操作数通过this指针隐式地传递，另一个操作数作为函数参数显示地传递；对于友元版本来说，两个操作数都作为参数来传递。
6.	rand()函数返回一个从0到某个值之间的随机整数。头文件cstdlib包含了srand()和rand()的原型。
7.	可以将类定义成与基本类型或另一个类相关，使得从一种类型转换成另一种类型是有意义的。

第十二章：
1.	对于静态类成员，可以在类声明之外使用单独的语句来进行初始化，这是因为静态类成员是单独存储的，而不是对象的组成部分。
2.	初始化是在方法文件中，而不是在类声明文件中进行的，这是因为类声明位于头文件中，程序可能将头文件包括在其他几个文件中。如果在头文件中进行初始化，将出现多个初始化语句副本，引发错误。
3.	在析构函数中使用delete语句可确保对象过期时，由构造函数使用new分配的内存被释放。
4.	析构函数的调用情况：
如果对象是动态变量，则当执行完定义该对象的程序块时，调用该对象的析构函数。
如果对象是静态变量，则在程序结束时调用该对象的析构函数。
如果对象是用new创建的，那么只有当我们显示使用delete删除对象时，该对象的析构函数才会被调用。
5.c++为类构造函数提供了一种可用来初始化数据成员的特殊语法。这种语法包括冒号和由逗号分隔的初始化列表，被放在构造函数参数的右括号后，函数体的左括号之前。
