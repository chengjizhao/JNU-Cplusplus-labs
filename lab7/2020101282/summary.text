第11章 - 继承与多态性：

继承：继承是一种C++特性，允许您创建新类（派生类）基于现有类（基类）的属性和方法。这有助于实现代码重用和构建层次结构。
基类和派生类：派生类继承了基类的属性和方法，形成了一种“is-a”关系，其中派生类是基类的扩展。
重写与隐藏：在派生类中，您可以重新定义继承自基类的方法，这称为函数重写。也可以使用virtual关键字来启用多态性，允许使用基类指针或引用来调用派生类对象的方法。
抽象基类：抽象基类是不能实例化的基类，通常包含至少一个纯虚拟函数，它们必须在派生类中实现。抽象基类用于定义通用接口，以便不同的派生类可以共享相同的接口。
多继承：多继承允许一个类从多个基类继承属性和方法，但需要小心处理可能引发的二义性。

第12章 - 文件输入输出与异常处理：

文件输入输出：C++提供了文件流对象，如ifstream（输入文件流）和ofstream（输出文件流），用于读写文件。您可以使用这些流来打开、读取和写入文本或二进制文件。
流操作符：您可以重载输入和输出运算符(<<和>>)，以使自定义类型能够使用文件流进行输入输出操作。
文件指针和定位：文件流使用指针来跟踪文件的位置。您可以使用seekg()和seekp()函数来定位指针的位置，以执行读写操作。
异常处理：异常处理允许您处理运行时错误和异常情况，提高程序的稳定性。使用try、catch和throw来捕获和处理异常，以便程序能够适当地响应问题而不崩溃。
文件管理：正确管理文件的打开和关闭对于避免资源泄漏至关重要。确保在使用完文件后关闭文件流。
