第11章
一般来说，访问私有类成员函数的唯一方法是使用类方法，C++则使用友元函数来避开这个限制，通过在声明前加上关键字friend让函数成为友元函数。
C++还扩展了对运算符的重载，允许自定义特殊的运算符函数，这种函数描述了特定运算符与类的关系。要调用运算符函数，可以直接调用该函数，也可以以通常的句法使用被重载的运算符。如果运算符函数是类成员函数，则第一个操作数调用对象，如果运算符函数是成员函数时，则第一个操作数是调用该函数的对象。
C++允许指定类和基本类型之间转换的方式，如果要将类转换为其他类型，则必须定义转换函数，指出如何转换，转换函数必须是成员函数。转换函数没有返回类型、没有参数，但必须返回转换后的值。

第12章
在类构造函数中，使用new为数据分配内存，然后将内存地址赋给类成员。在类构造函数中使用new，对象过期时容易引发问题，如果对象包含成员指针，同时它指向的内存是由new分配的，则释放用于保存对象的内存并不会自动释放对象成员指针指向的内存。因此要在类析构函数中使用delete来释放分配的内存，这样在对象过期后，将自动释放其指针成员指向的内存。
如果对象包含指向new分配的内存的指针成员，在初始化和赋值时，也会出现问题，这时需要定义一个特殊的复制构造函数来重新定义初始化，并重组赋值运算符。
当对象的存储持续性为自动或外部时，在它不存在时将自动调用其析构函数。如果使用new为对象分配内存，并将其地址赋给一个指针，当使用delete时，将自动调用析构函数。
