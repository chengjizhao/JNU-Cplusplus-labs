多线程编程基础知识：

1. 线程：线程是操作系统能够进行运算调度的最小单位，它被包含在进程之中，是进程实际运行时的基本单位。 std::thread：创建和管理线程
2. 并发与并行：并发是指多个任务在同一时间段内同时执行；并行是指多个任务在同一时刻同时执行。
3. 互斥锁：用于保护共享资源，防止多个线程同时访问资源造成数据不一致。 std::mutex
4. 条件变量：用于线程间的通信与同步，当一个线程等待某个条件成立时，另一个线程可以通过通知或广播唤醒它。std::condition_variable：使用条件变量进行线程间通信
5. 锁保护：用于自动解锁，在离开作用域时自动释放锁，避免忘记解锁的问题。std::lock_guard：用于加锁和解锁
6. 线程池：线程池是一种用于管理线程的容器，它可以自动创建、回收和管理线程，帮助程序员更高效地使用多线程。std::thread_pool