1. 线程（std::thread）：线程是操作系统能进行运算调度的最小单位。在C++中，std::thread类代表一个线程，可以通过它来创建和管理线程。

2. 互斥锁（std::mutex）：互斥锁是用于保护共享资源，防止多个线程同时访问而导致数据不一致的一种同步原语。在C++中，std::mutex类用来提供互斥锁。

3. 锁保护（std::lock_guard）：std::lock_guard是一个RAII（资源获取即初始化）类，用于管理互斥锁的生命周期。它能够在作用域中自动锁定和解锁互斥锁，确保锁定的安全释放。

4. 条件变量（std::condition_variable）：条件变量是一种线程同步的工具，用于一个线程通知另一线程特定的条件得到满足并唤醒。C++中的std::condition_variable类配合std::mutex使用，用于在等待一个条件成立时挂起一个或多个线程。

5. 线程池：线程池是一种线程管理机制，它在程序启动时创建一定数量的线程，并为每个线程分配任务。一旦某个线程完成了任务，它将被重新用于执行下一个任务，从而避免创建或销毁线程造成的开销。
