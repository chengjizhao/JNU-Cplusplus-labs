1. 线程：线程是进程内的执行流，一个进程可以包含多个线程，它们共享进程的资源。
2. std::thread：C++11引入的库，用于创建和管理线程。std::thread包含在头文件<thread>中，通过std::thread创建线程。
3. std::mutex：C++11引入的互斥量，用于保护共享资源，确保多个线程之间的同步操作。使用互斥量可以避免多个线程同时访问共享数据，防止数据竞争。
4. std::lock_guard：std::lock_guard用于管理互斥量的生命周期，即在作用域内对互斥量进行自动加锁和解锁操作。
5. std::condition_variable：C++11引入的条件变量，用于等待某个条件的发生，与互斥量结合使用，用于线程间的同步和通信。
6. 线程池：线程池是一组预先创建的线程，可用于执行异步任务。通过使用线程池，可以避免频繁创建和销毁线程的开销。
