第9章：对象和类

类的定义和使用：
类是一种用户定义的数据类型，用于封装数据和方法。
类的成员可以是数据成员（属性）和成员函数（方法）。

类的成员函数：
成员函数可以定义在类的内部，也可以在类的外部进行定义。
成员函数可以访问类的私有成员。

构造函数和析构函数：
构造函数用于初始化对象的状态，与类同名且没有返回类型。
析构函数用于清理对象，与类同名前面加上波浪线（~）。

this指针：
this 指针是一个隐含的指向对象的指针，用于在成员函数中引用调用该函数的对象。
类的成员初始化：
可以使用成员初始化列表在构造函数中初始化成员变量。

友元：
友元函数可以访问类的私有成员，但不是类的成员函数。

第10章：类和动态内存分配

动态内存分配：
new 用于在堆上分配内存，delete 用于释放堆上的内存。
动态内存分配允许在程序运行时分配和释放内存，而不是在编译时确定。

复制构造函数：
复制构造函数用于在创建对象时通过复制另一个同类型对象来初始化它。
避免浅拷贝，确保深拷贝或使用编译器生成的默认复制构造函数。

赋值运算符重载：
赋值运算符可以通过重载进行自定义，确保正确地复制对象的内容而不仅仅是指针。

析构函数的使用：
析构函数用于释放对象占用的资源，例如动态分配的内存。

静态成员：
静态成员属于类而不是对象，通过 static 关键字声明。
静态成员在所有类对象之间共享。

const成员函数：
const 成员函数不修改对象的状态，可以被常量对象调用。

友元函数和友元类：
友元函数和友元类可以访问类的私有成员，但不是类的成员函数。
