在第13章《类继承》中，我学习了面向对象编程中的重要概念——类继承。通过类继承，我可以从一个基类继承属性和行为，并且可以添加自己的成员。
我了解了如何派生一个类，包括如何在类定义中使用冒号和基类名称。我还学习了派生类的构造函数如何调用基类的构造函数来初始化继承的成员，并且讨论了访问权限对派生类对基类成员的影响。
派生类可以像使用基类一样使用，可以调用继承的成员函数和访问继承的成员变量，同时也可以添加自己的成员函数和成员变量。一个特殊的关系是派生类对象可以被当作基类对象使用，因为派生类包含了基类的成员和方法。
我还学习了多态性的概念，通过公有继承可以实现多态，即使用基类的指针或引用来调用派生类的方法。我了解了静态联编和动态联编的概念，以及派生类指针或引用与基类对象的兼容性。
虚函数是实现动态联编的关键，我学习了如何声明和使用虚函数，以及虚函数的注意事项。访问控制中的protected关键字允许派生类访问基类的成员，但在外部是不可访问的。
抽象基类是一个只用于派生其他类的基类，它通常包含纯虚函数。我了解了如何应用ABC（Abstract Base Class）概念来设计抽象基类和具体子类。还学习了在继承关系中使用动态内存分配的情况。
最后，我学习了类设计的关键点和注意事项，包括编译器生成的成员函数、其他类方法的定义、公有继承的考虑因素等。
