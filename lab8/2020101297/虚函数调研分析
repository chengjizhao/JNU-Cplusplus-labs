虚函数实现的内存结构通常涉及虚函数表（Virtual Function Table，简称 vtable）的概念。虚函数表是一张函数指针数组，
用于存储每个虚函数的地址。每个包含虚函数的类都有一个对应的虚函数表。当一个对象被创建时，会在对象的内存布局中
添加一个指向所属类的虚函数表的指针（通常称为虚函数指针或虚表指针）。通过虚表指针，对象可以在运行时动态地查找
和调用正确的虚函数。
不同对象的虚表指针指向的是各自所属类的虚函数表，而不是同一个表。这意味着每个对象都有自己的虚函数表，
以便正确地调用其所属类的虚函数。


在验证程序中，我定义了一个基类 Base，其中包含一个虚函数 func()。派生类 Derived 继承了基类，并覆盖了虚函数 func()。
在 main() 函数中，我创建了一个基类对象 baseObj 和一个派生类对象 derivedObj。然后，我定义了两个指针 basePtr 和 derivedPtr，
分别指向基类对象和派生类对象。
通过打印虚表指针的地址，可以观察到 basePtr 和 derivedPtr 指向的是不同的虚函数表。这证明了不同对象的虚表指针指向不同的虚函数表。
