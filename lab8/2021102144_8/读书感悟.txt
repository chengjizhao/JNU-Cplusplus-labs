第十三章
派生类对象存储了基类的数据成员（派生类继承了基类的实现）；
派生类对象可以使用基类的方法（派生类继承了基类的接口）；
多态公有继承使用虚方法或者在派生类中重新定义基类的方法；
将源代码中的函数调用解释为执行特定的函数代码块被称为函数名联编。
在C++中，因为函数重载的缘故，这项任务更复杂。在编译过程中进行联编被称为静态联编（早期联编）；
然而，虚函数的技术使得在编译过程中使用哪一个函数是不能确定的，因为编译器不知道用户将选择哪种类型的对象。
所以，编译器必须生成能够在程序运行时选择正确的虚函数的代码，这被称为动态联编（晚期联编）；
构造函数不能是虚函数；
析构函数应当是虚函数，除非类不用做基类；
友元不能是虚函数，因为友元不是类成员，而只有类成员才能是虚函数；
