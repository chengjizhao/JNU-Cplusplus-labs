第11章
访问类私有成员的唯一方法是使用类方法。虽然友元函数可以绕过这种限制，但在类声明中声明函数时，关键字 friend 是关键。运算符重载是功能强大的扩展机制。通过运算符重载，你可以自定义运算符的行为。这个函数可以是类的成员函数，也可以是友元函数。运算符函数的调用方式与普通函数的调用方式相同。需要注意的是，成员函数的第一个操作数通常是调用该函数的类的对象。类和基本类型的转换。如果一个类只有一个参数的构造函数，那么这个构造函数就可以被用作转换函数。当你尝试将一个类的对象转换为另一个类型时，编译器会自动调用这个转换函数，并返回转换后的值。
第12章
当一个类的构造函数使用 new 关键字为数据分配内存时，分配的内存的地址会被赋给类的成员。如果一个对象包含指向通过 new 分配的内存的指针，那么在析构该对象时，需要使用 delete 关键字来释放这块内存，否则可能会导致内存泄漏。如果一个对象包含指向通过 new 分配的内存的指针，那么在默认情况下，复制这个对象可能会导致问题。为了解决这个问题，你需要定义一个复制构造函数，并重载赋值运算符，以执行深拷贝，即复制实际的数据。一个对象的存储持续性可以是自动的或外部的。当使用常规的 new 运算符创建对象时，对象的存储持续性是自动的，这意味着在不再需要该对象时，会自动调用其析构函数。如果你使用定位 new 运算符创建对象，那么你需要通过指向该对象的指针显式地调用其析构函数。在类构造函数中初始化数据成员有一种特殊的语法。初始化列表位于构造函数后面的冒号之后，它包含一个或多个初始化成员的表达式，每个表达式后跟一个包含初始值的括号，各个初始化成员之间用逗号隔开。最后是函数体的括号。需要注意的是，非静态 const 成员或引用成员必须使用初始化列表进行初始化。另一种在 C++11 中引入的方法是在类内进行初始化，这等价于使用初始化列表，但会覆盖类内初始化。