第十一、二介绍了C++类的基本概念、定义和使用方法，以及动态内存分配和管理。

第11章：使用类
- 类是一种用户自定义的数据类型，用于封装数据和函数。
- 类的成员可以是数据成员（属性）和函数成员（方法）。
- 类的定义包括成员变量、成员函数和访问限定符（public、private和protected）。
- 成员函数可以在类内部定义，也可以在类外部定义。
- 类的对象可以通过构造函数进行初始化，并可以通过析构函数进行清理工作。
- 类可以有静态成员，静态成员属于类而不是对象。
- 类可以通过友元函数和友元类授权其他函数或类访问其私有成员。

第12章：类和动态内存分配
- 动态内存分配是在程序运行时动态地分配和释放内存。
- 使用new运算符可以在堆上动态分配内存，并返回指向所分配内存的指针。
- 使用delete运算符可以释放动态分配的内存。
- 使用new[]运算符可以分配一个数组，使用delete[]运算符来释放分配的数组。
- 深度复制是指在创建一个对象副本时，将对象的所有成员及其动态分配的内存进行复制。
- 默认情况下，C++使用浅复制，即仅复制指针而不复制所指向的对象。
- 可以通过编写拷贝构造函数和重载赋值运算符来实现深度复制。
- 智能指针（如std::shared_ptr和std::unique_ptr）是用于管理动态内存的类模板。
