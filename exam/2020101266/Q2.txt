虚函数表是C++中用于实现多态的一种机制，允许在运行时根据对象的实际类型来调用相应的函数，当一个类含有虚函数时，编译器为该类生成一个虚函数表。该表是一个指针数组，每个元素都是指向虚函数的指针，存储了虚函数的地址。每个含有虚函数的对象都会有一个指向其类的虚函数表的指针，这个指针使得运行时可以动态地确定要调用的函数。

编译器为每个包含虚函数的类生成虚函数表的方式如下：
1.对于含有虚函数的类，编译器在类的布局中添加一个隐藏的指针（通常称为虚指针或虚表指针），指向该类对应的虚函数表。
2.虚函数表中存储了这个类所有虚函数的地址。
3.当调用对象的虚函数时，实际上是通过这个隐藏的指针去查找对应虚函数表中的函数地址，然后进行调用。

为了证明虚函数表的存在，可以修改一个类并访问虚函数表的内容。可以创建一个简单的类，含有虚函数，并访问其虚函数表中特定位置的函数地址。

在继承中，派生类会继承基类的虚函数表，并在自己的虚函数表中添加新的虚函数或重写基类的虚函数。派生类的虚函数表会在基类的虚函数表之上，从而覆盖基类相应的函数指针。这样，派生类可以与基类共享虚函数表，并根据自身的需要进行修改。