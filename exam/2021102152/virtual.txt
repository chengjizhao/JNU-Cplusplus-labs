纯虚函数：
定义：在抽象类中声明的虚函数，该函数没有实现，也没有默认实现。
特性：纯虚函数在派生类中必须被重写（override）。
目的：使得含有纯虚函数的类成为抽象类，不能被实例化。
class AbstractClass {
public:
virtual void pureVirtualFunc() = 0; // 纯虚函数，=0表示没有实现
};
抽象类：
定义：至少包含一个纯虚函数的类。
特性：不能被实例化。
目的：作为其他类的基类，用于实现多态性。
虚函数表和虚指针：
虚指针：每个包含虚函数的类对象中都包含一个指向虚函数表的指针。这个指针称为“虚指针”。当类对象被创建时，虚指针被自动初始化为指向相应的虚函数表。通过虚指针，程序能够找到并调用正确的函数实现，实现多态性。
虚函数表：包含了类的所有虚函数的地址表。包含了所有虚函数的地址，以及一个指向基类的虚函数表的指针（如果基类也有虚函数的话）。当程序通过虚指针访问虚函数时，实际上是通过虚函数表来查找正确的函数实现的。
为什么包含纯虚函数的类不能实例化？：因为纯虚函数没有定义，如果允许实例化，会导致在运行时找不到纯虚函数的实现，从而导致程序崩溃或未定义行为。通过将包含纯虚函数的类定义为抽象类并禁止实例化，可以确保所有派生类都提供纯虚函数的实现，从而实现多态性。
