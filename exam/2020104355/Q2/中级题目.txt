1.什么是纯虚函数和抽象类？它们如何与虚函数表和虚指针相关联？
纯虚函数是指在基类中声明但没有实现的虚函数。
纯虚函数的定义语法如下：
virtual 返回类型 函数名 (参数列表) = 0;
其中 "= 0" 表示该函数是纯虚函数。纯虚函数没有函数体，因此不能被直接调用。它的主要作用是为其派生类提供一个接口，强制要求派生类必须实现它。
抽象类是指包含纯虚函数的类，不能直接实例化。抽象类的目的是为了作为其他类的基类，从而规范它们的行为。
在C++中，我们可以通过将类中的至少一个函数声明为纯虚函数来实现抽象类。如果一个类中有一个纯虚函数，那么它就是抽象类。抽象类的定义语法如下：
class abstract_class {
public:
    virtual void pure_virtual_function() = 0;  // 纯虚函数
    virtual void non_pure_virtual_function() {};
};
抽象类中除了纯虚函数外，还可以有非纯虚函数。非纯虚函数可以有函数体，因此它可以在抽象类中被实现。但是，如果一个派生类没有实现抽象类中的纯虚函数，那么这个派生类也将成为抽象类。
纯虚函数和虚函数表：纯虚函数使得派生类必须提供自己的实现。派生类的虚函数表包含基类的纯虚函数的地址，以及派生类自己的虚函数的地址。
抽象类和虚指针：抽象类不能被实例化，但可以通过指针或引用使用。对象的内存布局开头是虚指针，指向该类的虚函数表。通过虚指针和虚函数表，程序能够在运行时动态地调用相应的虚函数。
总的来说，纯虚函数和抽象类提供了一种接口规范，而虚函数表和虚指针则使得在运行时能够正确调用派生类的虚函数实现。这种机制支持多态性，允许在编译时和运行时进行动态绑定。

2.通过一个包含纯虚函数的抽象类示例，说明它的虚函数表和虚指针的情况。
示例见tes_2.cpp。在示例中，AbstractClass是一个抽象类，包含一个纯虚函数pureVirtualFunction和一个普通的虚函数normalVirtualFunction。抽象类不能被实例化，但可以通过指针或引用使用。

3.为什么包含纯虚函数的类不能实例化？请提供解释。
在运行时，抽象类的实例中包含一个虚指针，该虚指针指向虚函数表。虚函数表包含pureVirtualFunction和normalVirtualFunction的地址。通过虚指针和虚函数表，程序能够在运行时正确调用相应的虚函数。