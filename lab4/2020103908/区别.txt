二、
external、static 和 namespace 都是 C++ 中用于控制变量和函数的作用域和链接性（linkage）的关键字，它
们在程序的不同部分起着不同的作用。以下是它们之间的关系和作用的总结：

1.External linkage（外部链接性）：当一个变量或函数具有外部链接性时，它可以在整个程序中访问，包括不同的源
文件。这意味着它可以在不同的源文件中被引用和使用。使用 extern 关键字声明的变量具有外部链接性。
2.Static linkage（静态链接性）：
当一个变量或函数具有静态链接性时，它只能在当前源文件中访问，其他源文件无法直接访问。这意味着它在编译单
元内可见，但在其他编译单元中不可见。.使用 static 关键字修饰的全局变量和函数具有静态链接性。
3.Namespace（命名空间）：
命名空间用于创建一个作用域，可以将变量、函数和类型的名称组织在其中，以避免命名冲突。命名空间允许你将标
识符封装在一个命名空间中，以防止它们与其他地方的标识符发生冲突。使用 namespace 关键字定义命名空间，并
使用 :: 操作符访问其中的成员。

关系总结：

external 和 static 通常用于控制变量和函数的链接性，而 namespace 用于组织标识符以避免命名冲突。可以在命名
空间内定义具有不同链接性的变量和函数。例如，可以在命名空间内定义具有外部链接性或静态链接性的变量和函数。
命名空间通常用于在整个程序中创建一个逻辑分组，以确保不同部分的代码不会互相干扰。extern 关键字通常与外部
链接性一起使用，以声明在其他源文件中定义的全局变量或函数。static 关键字通常与静态链接性一起使用，用于限制
变量或函数的作用域，并使其只在当前源文件中可见。

