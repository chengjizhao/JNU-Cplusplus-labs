第五章：
本章讨论了循环和关系表达式，C++提供了3 种循环:for 循环、while 循环和 do while 循环。如果循环测试
条件为true 或非零，则循环将重复执行一组指令:如果测试条件为 false 或0则结束循环for循环和 while 循环都是入口
条件循环这意味着程序将在执行循环体中的语句之前检查测试条件。do while 循环是出口条件循环，这意味着其将在
执行循环体中的语句之后检查条件。关系表达式对两个值进行比较，常被用作循环测试条件。关系表达式是通过使用
6种关系运算符之构成的:关系表达式的结果为bool类型，值为true或false。>或!=。
一、
第六章：
本章介绍了if语句、ifelse 语句和 witch 语句来管理选项。if语句使程序有条件地执行语句或语句块，也就是说，如果
满足特定的条件，程序将执行特定的语句或语句块。if else 语句程序选择执行两个语句或语句块之一。可以在这条语
句后再加上 if else，以提供一系列的选项。switch 语句引导程序执行一系列选项之一。cctype 字符函数库提供了一
组方便的、功能强大的工具，可用于分析字符输入。
第七章：
本章主要介绍函数相关知识，库函数是已经定义和编译好的函数，同时可以使用标准库头文件提供其原型，因此只需
正确地调用这种函数即可。本书前面的示例已经多次这样做了。例如，标准 C 库中有一个 strlen()函数，可用来确定字
符串的长度。相关的标准头文件 cstring 包含了 strlen()和其他一些与字符相关的函数的原型。这些预备工作使程序员
能够在程序中随意使用strlen()函数。C++函数可以是递归的，也就是说，函数代码中可以包括对函数本身的调用。
C++函数名与函数地址的作用相同。通过将函数指针作为参数，可以传递要调用的函数的名称。
第八章：
本章主要讲了内联函数、引用变量、如何按引用传递函数参数、默认参数、函数重载、函数模板、函数模板具体化。
内联函数是 C++为提高程序运行速度所做的一项改进。常规函数和内联函数之间的主要区别不在于编写方式，而在
于 C++编译器如何将它们组合到程序中。要了解内联函数与常规函数之间的区别，必须深入到程序内部。函数的特
征标是其参数列表。程序员可以定义两个同名函数，只要其特征标不同。这被称为函数多态或函数重载。通常，通
过重载函数来为不同的数据类型提供相同的服务。函数模板自动完成重载函数的过程。只需使用泛型和具体算法来
定义函数，编译器将为程序中使用的特定参数类型生成正确的函数定义。
第九章：
本章主要介绍了单独编译、存储持续性、作用域和链接性、定位(placement)new运算符、名称空间。与其将结构
声明加入到每一个文件中，不如将其放在头文件中，然后在每一个源代码文件中包含该头文件。静态变量在整个程
序执行期间都存在。对于在函数外面定义的变量，其所属文件中位于该变量的定义后面的所有函数都可以使用它(文
件作用域)，并可在程序的其他文件中使用(外部链接性)。另一个文件要使用这种变量，必须使用 extem 关键字来声
明它。对于文件间共享的变量，应在一个文件中包含其定义声明(无需使用extemn，但如果同时进行初始化，也可使
用它)并在其他文件中包含引用声明(使用extern且不初始化)。
