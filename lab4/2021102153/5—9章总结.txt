c++ primer plus
第五章
for循环语句，关键语句为for(设置初始值;设置循环条件;设置循环后语句)设置的循环条件会转为bool类型。
cout， cout 在显示 bool 值之前将它们转换为 int ，cout.setf （ ios ： ： boolalpha ） 函数调用设置了一个标记，该标记命令 cout 显示 true 和 false 而不是1和0。
x++会改变x的值，而x+5则不会，会计算出和。
for循环不能付给变量。
for循环可用于访问字符串。
递增函数和递减函数会改变变量的值
副作用与顺序值，c++是将表达式计算完成后才计算递加和递减。
=是赋值语句==是判断语句要注意分辨。
while循环是没有初始化和更新部分的for循环。
clock()可以返回程序开始执行后所用的系统时间
do while循环先执行循环体在判断表达式。
总结 C++ 提供了 3 种循环： for 循环、 while 循环和 do while 循环。 如果循环 测试条件为 true 或非零， 则循环将重复执行一组指令； 如果测试条件为 false 或 0 ， 则结束循环。 for 循环和 while 循环都是入口条件循环， 这意味 着程序将在执行循环体中的语句之前检查测试条件。 do while 循环是出 口条件循环， 这意味着其将在执行循环体中的语句之后检查条件。 每种循环的句法都要求循环体由一条语句组成。然而， 这条语句可 以是复合语句， 也可以是语句块（由花括号括起的多条语句） 。 关系表达式对两个值进行比较， 常被用作循环测试条件。 关系表达 式是通过使用 6 种关系运算符之一构成的： < 、 <= 、 = = 、 >= 、 > 或 ! = 。 关系表达式的结果为 bool 类型， 值为 true 或 false 。 许多程序都逐字节地读取文本输入或文本文件， istream 类提供了多 种可完成这种工作的方法。 
第六章  分支语句和逻辑运算符。
if语句if(条件表达式)
if else语句if{}else{}
逻辑运算符&&或｜｜与？：4>5？10：15指的是如果问号前表达式为ture，则为10否则为15
switch语句
case defult语句case a b，如果为a值为b
break和continue退出循环和退出这次循环体继续执行循环。
后续是文本的输入与输出

第七章c++的编程模块
定义函数
void a{}；
值传递和函数参数：多个参数用，隔开。
函数和数组：void as(int a[])可以将数组a传递到函数中。或者用*a
Const表示将该关键字后面所定义的设为常量，不允许修改该常量的值，当const的位置不同时，其表示也不相同。
a、const int *pt=&ages；表示*pt是一个常量，不能通过改变*pt的值来修改ages的值，但可以对pt进行赋值即可以将另一个地址重新赋给pt；b、int * const pt=&ages；表示pt是一个常量，不能将其重新赋值，只能指向ages，但可以通过*pt来修改ages的值。c、const int * const pt=&ages；表示*pt和pt都是常量，pt只能指向ages且不能通过*pt来修改ages的值。
如果函数有涉及到变量，每次调用都会建立一个新的变量，即使变量名字相同，但是不是同一个变量，地址不同，但是同一次调用使用的是同一个变量（第二次调用前后第二次调用结束返回第一次调用时）
函数指针基础：
1）指向普通数据类型的指针：（或指向数值元素） int *p p=&a(a为普通变量)；
2）指向一维普通数据类型数组的指针： int （*p）[m] ；
3）指向普通数据的指针数组：所指向的数据的类型 *p[ 数组长度],p是数组名，用于存放指针；
4）指向返回值为普通数据的函数的指针变量： int（*p）（int，int…） ，将函数原型中的函数名改为*指针名即可，此时p=函数名，调用：p（实参列表）等价于 函数名（实参列表）；
5）返回指针值的函数：返回指针所指得数据类型 *函数名（形参列表），调用时返回的指针类型要与主调函数保持一致；
6）指向返回指针的函数的指针：返回指针所指得数据类型 *（*p）（形参列表），将函数原型中的函数名变为*指针名即可，p与函数名等价；7）指向返回值为函数的指针数组：返回指针所指得数据类型 *（*ary[n]））（形参列表）；注意：①、6）中的p为一级指针其与函数名等价，而7）中的ary实际为二级指针数组名为地址（代表其中的一级指针），而其又存放了指针值，总共就为二级指针。即有：const double *(**pd)(double* ar, int n)=p；（错误的 ，定义的二级指针，p为一级）const double *(**pd)(double* ar, int n)=ary；（正确，ary为二级指针，此时pd等价于ary，也即可用pd[0]代表ary中的第一个元素，即可用pd[0](形参列表)调用ary[0]代表的函数） ②、[ ]的优先级高于*，即有：const double *(*pd[3])(double* ar, int n):表示pd是一个元素个数为3的指针数组，pd先与[]结合表示为一个数组，在与*结合表示为一个指针数组
const double *(（*pd）[3])(double* ar, int n)；表示pd是一个指向元素个数为3的数组的指针。
第八章
内联函数square()计算平方
引用变量可以&加左值引用。1）必须在创建引用变量时对其初始化，且初始化后不能再将其作为另一个变量的引用变量； 
 2）当函数的形参为引用变量时，在函数调用时即将引用形参初始化为实参，传递方式类似于地址传递，该引用变量的改变将引起原始变量的改变；
  3）函数形参为引用变量时，若传递的实参类型不匹配或者不是左值时，将创建一个类型匹配或者匿名的临时变量（同时发出警告），此时引用变量将不再指向实参而是临时变量，该临时变量只在函数调用期间存在，并且此时引用变量的变化将不会导致实参的变化；
函数重载
double cube（double x）与double cube（ double &x）不能进行函数重载
double cube（double * x）可以发生函数重载，根据实参的类型进行函数调用。
是特征标的不同使得可以对函数进行重载，而不是函数类型；即当函数名、特征标相同而返回值不同时，是不允许函数重载的，即：long gronk（int n）与double grank（int n）不能进行函数重载。

第九章
静态指变量在使用完后不会消失，编译器会为其指定特定的内存空间；自动变量在使用完后便会消失，编译器将其存在称为栈的地方；动态变量指用c++运算符new或c函数malloc（）分配的内存，不是LIPO，其分配释放顺序取决于new、delete的使用，这个内存空间为堆。
Static可以声明全局变量
const+全局变量，该变量的链接性为内部
默认函数均为外部的、静态的，即函数可以在文件中共享，且在整个程序执行期间都一直存在；在函数定义和原型中都使用static关键字时，该函数只在该文件中可见；
1）using 声明与using 编译：前者使单名称的可见；后者使名称空间中的所有名称均可见；作用域为声明区域；
2）可使用作用域解析符“：：”在每次使用名称空间的名称时进行说明；

