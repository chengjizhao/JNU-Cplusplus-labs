第5章 - 循环和关系表达式
第五章继续深入讨论控制结构，特别是循环控制结构。它详细介绍了while、do-while和for循环的语法和应用场景，
当括号内条件为真时继续循环，而为假时跳出循环。三种循环各有特点
以及如何使用它们来实现重复执行的逻辑。此外，章节还解释了逻辑运算符和关系运算符的用法，
以及它们在条件语句中的应用。能够帮助编写更具逻辑性的程序。

第6章 - 分支语句和逻辑运算符
第六章讨论了条件语句，包括if、else、switch和case。它详细介绍了如何根据条件来执行不同的代码块，
以及如何处理多个条件的情况。此外，章节引入了逻辑运算符，如&&和||，以实现更复杂的条件判断。
switch语句引导程序执行一系列选项之一，每一个case要有break语句，若一系列选项无法满足所有可能，则应增加默认值default。

第7章 - 函数--C++的编程模块
第七章深入研究了C++中的函数。它包括函数的声明、定义、参数传递和返回值。
函数定义是实现函数功能的代码，函数原型描述了函数的接口
了解如何将任务分解成函数，以实现模块化的程序设计。此外，章节介绍了函数的重载，
这允许定义多个同名函数但具有不同的参数列表。这使得函数更加灵活和通用。

第8章 - 函数--C++的编程模块（续）
第八章继续探讨函数的主题。它介绍了函数的默认参数、内联函数和函数指针。
默认参数允许在调用函数时省略部分参数，提高了函数的可用性。
内联函数在性能优化方面发挥了重要作用，允许将函数体嵌入到调用处，减少了函数调用的开销。
函数指针允许将函数作为参数传递给其他函数，具有高度的灵活性。

第9章 - 内存模型和名称空间
第九章讨论了C++的内存模型和名称空间。它解释了程序的内存结构，包括栈和堆的概念，
以及如何在内存中存储数据和函数。此外，章节引入了名称空间的概念，以避免命名冲突。
using指令简化了名称空间的使用，使得编写清晰的代码变得更加容易。