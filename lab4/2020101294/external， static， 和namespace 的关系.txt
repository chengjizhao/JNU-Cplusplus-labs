1. External Linkage（外部链接）：
   变量或函数具有外部链接时，它们可以在不同的源文件中访问。
   通过使用关键字 `extern` 声明或在全局范围定义的变量具有外部链接。
   通常，这些变量或函数被放在一个单独的源文件中，并且可以通过其他源文件中的 `extern` 声明来使用。
   外部链接的变量或函数在整个程序中都是可见的。

2. Static Linkage（静态链接）：
   变量或函数具有静态链接时，它们仅在定义它们的源文件中可见，不能在其他源文件中访问。
   使用 `static` 关键字在全局范围定义的变量或函数具有静态链接。
   静态链接的变量或函数对于同一源文件中的其他函数来说是全局的，但对其他源文件是不可见的。

3. Namespace（命名空间）：
   命名空间是一种用于避免名称冲突的C++特性，允许将变量、函数和类封装在一个特定的命名空间中。
   命名空间通过 `namespace` 关键字定义，如 `namespace MyNamespace { /* ... */ }`。
   在命名空间内，可以定义全局变量、函数和类，并使用 `::` 操作符在不同的命名空间中访问它们。
   命名空间提供了一种组织和隔离代码的方法，以防止名称冲突。