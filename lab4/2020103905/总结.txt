第5章
C++介绍了3种循环：for循环，while循环和do while循环。
1、for循环：
 - 在循环开始之前，初始化计数器变量，然后判断循环条件是否为真，如果为真，则执行循环体内的代码。
 - 每次循环结束后，更新计数器变量，并再次判断循环条件是否为真，如果为真，则继续执行循环体内的代码，直到循环条件为假或遇到break语句。
2、while循环：
 - 在循环开始之前，首先判断循环条件是否为真，如果为真，则执行循环体内的代码。 - 在每次循环结束后，再次判断循环条件是否为真，如果为真，则继续执行循环体内的代码，直到循环条件为假或遇到break语句。
3、do-while循环： 
- 先执行一次循环体内的代码，然后再判断循环条件是否为真，如果为真，则继续执行循环体内的代码。 - 在每次循环结束后，再次判断循环条件是否为真，如果为真，则继续执行循环体内的代码，直到循环条件为假或遇到break语句。


第6章
if语句：有条件的执行语句或语句块，如果满足指定条件，程序将执行特定的语句。
if else选择：选择执行两个语句或两个语句块之一。
switch语句：引导程序执行一系列选项之一。
if和if else语句通常使用关系表达式作为测试条件，通过逻辑运算符&&、||和！，组合修改关系表达式，从而创建更加细致的测试。



第7章
1. 函数的基本概念：
   - 函数是一段完成特定任务的代码块，可以通过函数名来调用执行。
   - 函数包括函数头和函数体，函数头包括返回类型、函数名和参数列表。

2. 函数的定义与调用：
   - 函数定义包括函数头和函数体，可以在函数体内部实现具体的功能。
   - 函数调用通过函数名和参数列表来执行函数的代码块。

3. 函数的参数传递：
   - 参数是函数接收外部数据的一种方式，可以通过值传递、引用传递和指针传递来传递参数。
   - 值传递会创建参数的副本，引用传递和指针传递可以在函数内部修改原始数据。

4. 函数的返回值：
   - 函数可以有一个返回值，用于将处理结果返回给调用者。
   - 返回值可以是任意类型，包括基本类型、自定义类型和指针类型等。

5. 递归：
   - 递归是指函数调用自身的过程。
   - 递归函数包括递归条件和递归调用，需要注意递归的结束条件，以避免无限递归。




第8章
1、 内联函数：
内联函数是通过在编译时将函数调用处替换为函数体来减少函数调用的开销。使用inline关键字定义内联函数，适合用于较小且频繁调用的函数。
2、 默认参数：
  可以为函数的参数设置默认值，当调用该函数时，如果没有提供对应参数的值，则使用默认值。默认参数应该从右向左设置，确保调用时只省略后面的参数。
3、 函数重载：
   函数重载允许在同一作用域内定义多个同名但参数列表不同的函数。通过函数重载，可以根据不同的参数类型或参数个数来选择正确的函数进行调用。
4、 函数模板：
函数模板是一种通用的函数定义，可以用于生成特定类型的函数。编译器会根据函数调用时的实际参数类型推导出合适的函数模板实例化。


第9章
静态变量在整个程序执行期间都存在，对于在函数外面定义的变量，在所属文件中，位于该变量定义后面的所有函数都能使用它，另一个文件也可以使用这一变量，只是在使用前要用extern关键字来声明它。
使用关键字static定义的变量作用域被限制在整个文件，其他文件不能不能使用。
动态内存分配和释放是使用new和delete进行的，它使用自由存储区或堆来存储数据。调用new来占有内存，占用delete来释放内存，程序使用指针来跟踪这些内存单元。
名称空间用于避免命名冲突，将全局标识符划分为不同的作用域。可以使用namespace关键字定义名称空间，并使用using声明或限定符来访问其中的标识符。
