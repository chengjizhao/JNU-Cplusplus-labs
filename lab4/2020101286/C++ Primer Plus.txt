第5章
C++中有三种循环：for循环、while循环、do while循。循环测试条件为true或非零就重复执行一组指令，为false或0则结束循环。for循环和while循环都是先检查循环测试条件，再进行循环体运行，do while循环是先执行一次循环体，再检查循环测试条件。
然后就是关系运算符>、>=、==、<=、<和!=，这些都是循环和条件判断里面非常常用的运算符，用于判断条件是否成立来判断接下来的结构体是否执行。接下来就是在C语言中非常常见的一些运算符，如逗号、组合运算符等。
最后介绍了如何读取输入文本cin、get()，以及一些嵌套结构，这些和C语言稍微有点不同，但是用法都和C语言非常类似。
第6章
C语言中讲了比较常用的if、if else、switch、continue和break语句，以及逻辑运算符&&、||和！。if语言和while循环类似，都是先判断测试条件是true还是false。如果是true或非零，则执行语句或语句块，如果是false或0，则跳过语句。if else则与if有所不同，if是决定执行或跳过语句或语句块。if else是决定执行两个语句或语句块的其中一个。因此平时较多使用if，但是在遇到有两个语句块时也会使用if else。continue和break在C语言中就已经有过了解，它们是用于跳过部分代码。对于一些较长的循环体，可以通过这两个语句来跳过不需要执行的代码来节省程序运行的时间。switch语句则是条件运算符中用于多个语句块的语句，它和if、if else相比可以面对多个语句块，不需要进行嵌套结构的使用，减轻了程序员的编码负担。
逻辑运算符&&、||和！可以组合或修改关系表达式，让运用上述语言时可以比较便捷地完成条件的选取。
第7章
本章涉及了C++的函数，这些函数与C语言中的函数类似，有值的传递、数组、指针、字符串以及递归函数。和C语言有所不同的是，这些函数在运用时，语法和C语言的有所不同，然后就是一些结束方式不同，如C++使用空值字符（\0）来结束字符串。string类也可以用于表示字符串，然后求取字符串的长度使用的是size()，这与C语言也有所不同。
其它的大致与C语言类似，如递归函数，通过用函数指针作为参数传递要调用的函数名称等。
第8章
这一章函数探幽是在C语言的基础上，扩展了函数的功能，通过将inline关键字用于函数定义，并在首次调用该函数前提供函数定义，可以使C++编译器将该函数视为内联函数，用相应的代码替换函数调用。
然后就是引用变量，这是一种伪装指针，可以用于变量创造别名，用来处理结构和类对象的函数参数。
接下来是C++的新增特性——函数模板，它使用泛型来定义函数，通过将这种类型作为参数传递给模板，可使编译器生成该类型的函数。这种特性可以节约修改代码的时间，并且不容易出现错误。当然也存在局限性，就是无法处理一些类型。
第9章
本章内存模型和名称空间主要介绍C++进行程序文件的单独编译。单独编译由三部分组成：头文件、与结构有关函数代码的源代码文件以及与调用结构相关函数代码的源代码文件，头文件和源代码文件一起定义和实现了用户定义的类型和使用方法。
然后就是C++的静态变量和动态内存分配及释放，这些定义都比较的复杂，但是也是比较重要的知识。
