1. External（外部链接性）：
   External 声明的变量和函数可以被多个源文件共享，这意味着它们具有全局作用域。
   通过使用 `extern` 关键字，你可以声明在其他源文件中定义的变量或函数，以便在当前源文件中使用它们。
   External 声明通常用于多个源文件需要共享相同变量或函数的情况，以便避免重复定义。

2. Static（静态）：
   `static` 关键字可以应用于变量和函数。
   静态变量：在函数内部声明的静态变量会保留其值，即使函数退出也会保持。它们具有局部作用域，只能在声明它们的函数中访问。
   静态函数：静态函数只能在声明它们的源文件中使用，不能被其他源文件访问。这意味着它们具有文件作用域。

3. Namespace（命名空间）：
   命名空间是一种将变量、函数和类组织成逻辑分组的方法，以避免名称冲突。
   通过使用 `namespace` 关键字，你可以创建一个命名空间，将一组相关的变量和函数置于其中。
   命名空间允许你在不同的作用域中创建相同名称的变量或函数，只要它们位于不同的命名空间中，就不会冲突。

关系总结：
`external` 主要涉及全局作用域，允许在多个源文件之间共享变量和函数。
`static` 主要涉及局部作用域，用于创建在函数内部或文件内部具有静态存储期的变量和函数。
`namespace` 主要用于组织和隔离名称，以避免命名冲突，但它不涉及变量或函数的链接性（即是否可以在不同的源文件中共享）。
