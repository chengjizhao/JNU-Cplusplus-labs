c++ primer plus 第六版总结

第一章

面向对象的编程与过程性编程不同，面向对象的编程试图让语言来满足问题的要求。

c++与c语言相比增加了面向对象的编程和泛型编程有助于节省编程时间和提高程序可靠性。

第二章

main()作为接口的函数头默认结尾为return0，运行程序时通常从main函数开始。

注释以// 或\*和*/之间包围

使用iostream而不是iostream.h时需要用using namespace std;使其可用，叫做using指令。using std::cout//例子可以让cout函数可用。

换行符\n与endl的区别是后者会刷新缓冲区

缓冲区是指计算机用来临时存放数据的地方，通常是一块内存区域。在输入输出时，需要将输入或输出的数据先暂时存放在缓冲区中，然后根据一定条件一次性进行读写或写入。

c++中不能把空格，制表符和回车等放在元素中间。

函数调用必须包含括号。

第三章

简单的变量，定义变量类型等等。

const限定符规定一个常量

c++的运算符不多总结，类型转换格式（long）a等等。

auto声明，让编译器根据初始值的类型推断变量的类型。

第四章 

c++允许在声明结构变量时省略struct（c语言不可以）

面向对象编程与传统的过程性编程的区别在于：面向对象编程强调在运行阶段（而不是编译阶段）进行决策。

用new分配内存new从堆区或自由存储区的内存区域分配内存，常规声明变量从栈区分配内存。

用new分配内存的同时用delete释放内存。

new创建动态数组，静态数组：在编译时给数组分配内存；动态数组：数组在程序运行时创建，需要则创建，不需要则不创建，还可以在程序运行时选择数组的长度（动态数组）。

第十六章

本章主要讲解了string类的使用以及智能指针类：用于指向new、new[]分配的动态内存，当智能指针对象过期时其析构函数将使用配套的delete；主要讲了auto_ptr、unique_ptr的差别。

迭代器分类

输入迭代器：将容器的信息输入到程序，只能读不能写，只能使用++遍历容器（前缀后缀均可），可对当前的迭代器解除引用，单通行的，不能对迭代器先前的值解除引用，也不能保证第二次遍历的顺序

输出迭代器：除了迭代器用于对容器的只写不读之外，其他特性与输入迭代器相同；正向迭代器：除了具有输入输出迭代器的所有功能外，还实现了可对前面的迭代器值解除引用（如果保存了它），不同于输入迭代器，可以实现正向的多次通行；

双向迭代器：具有正向迭代器的全部特征，同时增加了--（前缀后缀）运算符，能够双向遍历容器；随机访问迭代器：具有双向迭代器的全部特征，增加了可访问容器中任何一个元素的功能，即随机访问功能以及对元素进行排序的关系运算符

反向迭代器：对迭代器的递增操作将导致它被递减，既若有p是指向某容器的超尾迭代器，++p操作将使其指向容器的最后一个元素；

插入迭代器：将一般迭代器的赋值操作转换为插入操作，将数据插入到迭代器指定的位置，而不会覆盖原始数据；back_insert_iterator：将元素插入到容器尾部，只能用于允许在尾部快速插入（时间固定的算法）的容器

可反转容器：可以使用rbegin（）、rend（）类方法，两者均返回一个反向迭代器，前者为一个指向超尾的反向迭代器，后者则指向第一个元素，运用这两种方法，可对容器进行反向操作；关联容器（set、multiset、map、multimap）：使用某种树实现，类似结点但比结点的查找速度更快，关联容器都是进过排序的；set：值和键类型相同，且键唯一，多个相同的键只会存储一个，值就是键；multiset:与set相似，但是允许多个值的键相同，即可以存储多个相同的值；

map：值与键的类型不同，每个键只对应一个值，容器中的值成对，一把用pair对其进行赋值等操作，且可使用first、second分别访问其值与键数据，可以使用数组表示法得到与键关联的值（wordmap[“the”]，其中wordmap为map容器，the为其中的一个键，则该表示方法将得到键”the”对应的值的数据）；multimap：与map类似，但是允许多个值对应一个键，成员函数count（）以键作为参数，并返回键对应值出现的次数；

函数适配器：用于不同类型函数符之间的转换（例如一元函数和二元函数之间的转换）；方法：使用类将接受两个参数的函数转换为接受一个参数的函数对于自适应函数符，STL中使用binder1、binder2类自动完成这一过程。

除了迭代器还包括了STL copy算法

其需要注意的包括，不能使用copy算法将一个范围的值复制到一个空容器中，可以采用构造函数用另一个容器中的值初始化该容器。

copy算法可以用于不同容器间的复制，但会覆盖原始数据。

第十七章

本章主要讲了Ostream类字符显示方法，cout格式化方法，get()、getline（）方法、与抽取运算符>>，以及其他istream方法。

文件格式：文本格式和二进制格式两种，插入运算符以及抽取运算符则是以文本格式来输出和输入数据，因此对于二进制文件的输入输出不应用这两个运算法，而是采用write和read方法。

最后讲了Exit函数