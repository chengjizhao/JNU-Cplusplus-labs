第一章 预备知识

在这一章中，作者介绍了c语言和c++的起源，由于计算机功能的愈发强大，计算机程序也越来越复杂，从而对这些程序的管理和维护带来一些新的问题。c语言和c++的出现就是为了解决这个问题，c语言的结构化和模块化编程解决了早期程序语言的意大利面条式编程的问题，c++在c的基础上，增加了对面向对象的编程和泛型编程的支持。随着c++的普及，以及各种国际标准的制定，使得c++在各种平台的可移植性大大增强，成为当下使用最普遍的编程语言之一。


第二章 开始学习c+++
这一章从c++程序的基本结构入手，介绍了c++的一般格式。c++程序的主体部分是函数，由一个或多个函数模块组成，程序从main（）函数开始执行。在c++中，使用cin和cout进行输入和输出,＜＜插入运算符将数据插入输出流，＞＞抽取运算符从输入流中抽取信息。另外值得注意的一点是变量声明，c++在首次使用变量前应事先声明。


第三章
这一章讲了c++的基本数据类型，比如整型，浮点型和字符型，其中整型又可根据内存量和有无符号来区分。之后介绍了c++运算符，其中需要注意的是根据运算符的优先级和结合性规则决定哪个运算符先执行，这与c语言的运算符是类似的。最后是在进行强制类型转换时，一些类型转换是安全的，即不损失和不改变数据情况下进行转换，而一些转换如浮点型转换为整型时需要小心，可能会损失数据。


第四章 复合类型
这一章介绍了c++的三种复合类型，即数组，结构，和指针。这三个概念在c语言中就有接触过。结构可以将不同类型的值存储在同一个数据对象中，可以使用成员关系运算符（.）来访问其中的成员。指针是用来存储地址的变量，指针指向的是对象的地址。数组和指针通常是同时使用的，指针用来访问数组中的元素。




第16章 string类和标准模板库
string类是C++标准库提供的用于处理字符串的类。它提供了一系列成员函数和操作符重载，方便对字符串进行操作。string对象可以动态调整大小，支持自动内存管理。可以使用string对象直接进行字符串的连接、查找、替换等操作。
标准模板库是C++标准库的一部分，提供了许多通用的数据结构和算法。STL包含三个主要组件：容器、迭代器和算法。容器提供了不同类型的数据结构，如向量（vector）、链表（list）、集合（set）等。迭代器用于遍历容器中的元素，类似于指针。算法提供了一系列操作容器的通用算法，例如排序、查找、拷贝等。
深入学习和理解string类和STL是成为熟练的C++开发人员的关键。掌握它们将为你在处理字符串和使用通用数据结构时提供强大的工具和技术。


第17章 输入、输出和文件
c++使用输入流istream和输出流ostream来处理输入和输出。输入流用于从外部读取数据，输出流用于向外部写入数据。标准输入流cin和标准输出流cout是最常用的输入输出流对象。
文本文件以字符格式存储所有的信息，数字值将会被转换为字符表示。常规的插入和抽取运算符以及get（）和getline（）都支持这种模式。二进制文件使用计算机内部使用的二进制表示存储信息。与文本文件相比，二进制文件存储数据更加精确和简洁，但可移植性差。
