第一章 预备知识
C++融合了3种不同的编程方式：C语言代表的过程性语言、C++在C语言基础上添加了类代表的面向对象语言以及C++模板支持的泛型编程。C++继承C语言高效、简洁、快速和可移植性的传统。本章分多个小节介绍了面向对象编程（OOP）和泛型编程以及说明C++是C语言的超集，任何有效的C程序都是有效的C++程序，C++既可以通过OOP进行抽象，也可完成类似C一样的对硬件访问的操作。并对程序创建的技巧进行讲解。
第二章 开始学习C++
介绍如何构建一个C++程序，讲解main()函数、头文件名、换行符等基础的用法，对cout和cin使用进行详解，对C++语句、类以及函数进行介绍。类是用户定义的一种数据类型。要定义类，需要描述它能够表示什么信息和可对数据执行什么操作。类定义描述的是：数据格式及其用法，而对象则是根据数据格式规范创建的实体。有返回值的函数将生成一个值，而值将赋值给变量或其他的表达式中使用。函数部分还对用户定义的有返回函数和无返回函数进行讲解，以及在多函数程序中使用using编译指令的情况。
第三章 数据处理
本章介绍了C++变量的命名规则，变量名只能使用字母字符、数字和下划线（_）、名称的第一个字符不能是数字、区分大小写、不能将关键字用作名称、以两个下划线或下划线和大写字母开头的名称被保留给实现（编译器及其使用的资源）使用。以一个下划线开头的名称被保留给实现，用作全局标识符以及对名称长度没有限制，名称中所有字符都有意义。对整型和浮点型进行详细介绍，其中还包括const限定符的使用，C++算术运算符中特地对除法运算符的问题进行总结说明，除法运算符（/）的行为取决于操作数的类型。
如果两个操作数都是整数，则C++将执行整数除法。把结果的小数部分丢弃，使最后的一个结果是一个整数。如果其中有一个（或两个）操作数是浮点数，则小数部分将保留，结果为浮点数。
第四章 复合类型
本章讲解数组、字符串、string类、结构、共用体（union）、枚举、指针相关内容。数组声明的三个特点：存储在每个元素中的值的类型、数组名以及数组中的元素数。存储在连续字节中的一系列字符意味着可以将字符串存储在char数组中。其中每个字符都位于自己的数组元素中。使用引号括起来的字符串，这种字符串叫 字符串常量（String constant） 或 字符串字面值（string literal） 。结构可以同时存储int、long和double，共用体只能存储int、long和double三种。每个枚举都有取值范围的上限，通过强制类型转换，可以将取值范围中的任何整数值赋给枚举常量，即使这个值不是枚举值。在C++创建指针时，计算机将分配用来存储地址的内存，但是不会分配用来存储指针所指向的数据的内存。C++中允许指针和整数相加。加1 的结果等于原来的地址值加上指向的对象占用的总字节数。也可以将一个指针减去另一个指针，获得两个指针的差。得到一个整数，仅当两个指针指向同一个数组(也可以指向超出结尾的一个位置)时，这种情况会得到两个元素的间隔。
第十六章  string类和标准模板库
本章介绍了string类中字符串的使用、智能指针模板类型、标准模板库vector的应用、泛型编程2、函数对象以及算法等相关内容。string 实际上是模板具体化 basic_string<char> 的一个 typedef，同时省略了与内存管理相关的参数。智能指针是行为类似于指针的类对象，其目的是将开发者将申请未释放的内存回收，从而避免内存泄漏。TL通过在头文件vector中定义了vector模板，使其类成为通用的，创建vector模板对象，使用通常的 表示法来指出要使用的类型。vector模板使用动态内存分配，所以可以用初始化参数来指出多少矢量。函数符是可以以函数方式与() 结合使用任意对象：函数名、指向函数的指针和重载了()运算符的类对象（即定义了函数operator()()的类）。
第十七章 输入、输出和文件
本章主要介绍C++中cin和cout的应用以及文件的输入输出和内核格式化。C++程序把输入和输出看作字节流。在默认情况下，cout 使用空格填充字段中未被使用的部分，可以使用 fill() 成员函数来改变填充字符。浮点数精度的含义取决于输出模式。在默认模式下，指的是显示的总位数。在定点模式和科学模式下，精度指的是小数点后的位数。C++中的默认精度为6位（末尾的0将不显示），precision() 成员函数使能够选择其他值。C++ I/O类软件包处理文件输入和输出的方式与处理标准输入和输出的方式相似。要写入文件，需要创建一个ofstream对象，并使用ofstream方法，要读取文件，需要创建一个ifstream对象，并使用ifstream方法。头文件 sstream 定义了一个从 ostream类派生来的ostringstream类。如果创建了一个ostringstream对象，则可以将信息写入其中，并将其信息存储。istringstream 和 ostringstream类使得能够使用 istream 和 ostream 类的方法来管理存储在字符串中的字符数据。