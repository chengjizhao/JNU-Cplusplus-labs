第一章：预备知识

介绍了从C语言以及C语言编程原理开始，简述C++发展经过。
从Stroustrup编写的《The Programming Language》到C++11的补充说明，为C++的发展使用提供了特性参考。
C++的一个重要思想就是“OO”思想，即“面向对象”的编程思想。在C++中，类是一种规范。
它描述了这种新型数据格式，对象是根据这种规范构造的特定数据结构。
C++在C语言的基础上添加了对面向对象编程（opp）和泛型编程的支持。opp强调的是编程的数据方面，泛型编程强调的是独立于特定数据类型。
在进行C++编程的过程中，代码的运行取决于计算机环境和使用的C++编译器。
此外，还介绍了不同操作系统上C++的创建和编译方式

第二章：开始学习C++

介绍了C++编程的一般格式和基本代码使用。
首先是预函数指令：与C语言的区别是：C语言的传统是头文件使用扩展名.h，C++的头文件则没有扩展名。
但同时C++也能够使用printf()、scanf()和其他所有标准C输入和输出函数。只需要包含常规C语言的stdio.h文件。
以及输入输出指令：使用了cin、cout进行输入输出，配合endl进行数据字符的写入和读出。
通过了解在C++中如何进行变量的声明和使用，引申出了“类”的概念。类是用户定义的一种数据类型。函数是创建C++程序的模块，对C++的OOP定义至关重要。
C++函数分两种：有返回值的和没有返回值的。

第三章：处理数据

变量名第一个字符不能是数字，区分大小写，只能是数字、字符和下划线（_），不能将C++关键字作为变量名，不要创建以下划线开头的变量名，把它留给标准库。
C++新增整型：unsigned long long, long long 至少64位
short (int)至少16位;int 至少与 short 一样长;long (int) 至少32位; long long (int)至少64位，至少与 long一样长。
char 类型实际是整型，它是否有符号由 C++实现决定。字符型有扩展类型 wchar_t，具体位数由系统底层决定，用 wcin 和 wcout 处理扩展字符流。
const限定符类似#define，创建一个字符常量。要初始化，无法声明后再赋值。
浮点数float 至少32位，double 至少48位，且不少于 float，long double 不少于 double。有效位由低到高。浮点常量默认 double。
强制类型转换，计算机最自然的类型是 int 和 double，如两个 short 相加，计算机会先转成 int 结果再转成 short。

第四章：复合类型

数组:
数组声明时，元素个数可以是常量表达式，如：8 * sizeof（int），不能是变量。sizeof（数组名）是数组所有元素的字节数。数组初始化可以省略 “=“。
字符串:
字符串结尾必须有 ‘\0’、‘s’和“s”不同。且注意cout 允许字符串拼接。
string:
使用string类要添加头文件string，它在std空间中，要 using namespace std 或者std :: string使用。
string类变量，自动处理处理字符串大小，同数组类似，可以用下标访问元素。初始化与字符串数组一样，未初始化的string类长度为0。
结构:
与C不同，声明已定义的结构的变量时，可以省略关键字 struct，定义结构时，内部元素之间用分号（‘；’）分隔开。结构初化或者赋值时，用逗号（‘,’）始化。同类结构可以用 ”=“ 赋值。
可以定义没名称的结构类型，即定义时省略结构名称。

第十六章：string类和标准模板库

string类是由头文件string支持的。
头文件string.h和cstring支持对C风格字符串进行操作的C库字符串函数,但不支持string类。
C预处理器和C库—C预处理器在程序执行之前查看程序，所以称预处理器。处理器可以包含程序所需的其他文件，可以选择让编译器查看哪些代码，预处理器并不知道C。
预处理器表达式的长度必须是一个逻辑行，一个逻辑行可以是多个物理行。
在预处理器之前，编译器要对该程序进行一些翻译：
1）编译器把源代码中出现的字符映射到源字符集；
2）编译器定位并删除每个反斜杠后面跟着换行符的实例；
3）编译器把文本划分成预处理记号序列、空白序列和注释序列。
预处理器指令以#作为一行的开始，旧版本要求指令从一行最左边开始，而且#和指令其余部分之间不能有空格，ANSI和后来的标准都允许#号前面有空格或制表符，
而且允许在#和指令其余部分之间有空格。指令可以出现在源文件的任何地方，其定义从指令出现的地方到该文件的末尾。
C库提供许多有助于完成各种任务的函数。使用库：访问C库、使用库描述。

第十七章：输入、输出和文件

C++程序把输入和输出看作是字节流。输入时，程序从输入流中抽取文件，输出时程序把字节插入输出流。
管理输入包含两部分：将流和输入去向的程序关联起来，将流与文件连接起来。
文件格式:将数据存储在文件中时，有文本格式各二进制格式两种，文本格式是将所有内容存为文本，每个字符都单独视为一个文本（123.4将被存储为5个字符），而二进制格式则是指数据的计算机内部表示（123.4存储为这个值的64位double表示而不是存储5个字符），
而对于字符数据而言，这两种格式表示都是一样的即存储字符的ASCII码的二进制表示。
内核格式化:读取 string 对象中的信息，或者格式化写入 string 队形中被称为内核格式化。（incore formating）。ostringstream 类有一个名为 str()的成员函数，该函数返回一个被初始化缓冲区内容的字符串对象。
修改程序遵循原则：强调最初的设计，并简化其他细节。
三步完成定义新类型：
首先，提供类型属性和相关操作的抽象描述；
其次，开发一个实现ADT的编程接口，即指明如何存储数据和执行所需操作的函数；
最后，编写代码实现接口。
链表、队列和二叉树是ADT在计算机程序设计中常用的实例，通常用动态内存分配和链式结构来实现，但有时用数组来实现会更好。
