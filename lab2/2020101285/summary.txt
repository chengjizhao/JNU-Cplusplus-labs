第一章
本章主要介绍了C++的起源和它与C语言的关系，并讲解了如何编写一个简单的C++程序，同时，还讨论了基本的C++语法元素，如注释、变量和数据类型，包括整数、浮点数和字符，如何创建源代码文件。通过这一章的学习，我初步了解C++的基本概念和编程技巧

第二章
本章介绍了C++程序最基本的结构要求，介绍了#include、main()、cout、end1、cin这几个我们在编程时非常常用的指令和函数，解答了它们究竟是如何执行和运行的。都是一些比较基础的内容。

第三章
本章介绍简单变量、const限定符、浮点数、C++算术运算符。具体包括怎么样进行数据的处理。C++自带的两种数据类型是整数和浮点数，C++是仅仅提供了灵活的标准即只是确保了最小长度，让编程者能够较为自由地进行数据位数的输入输出，C++的优先级和综合性规则可以确定执行两个或多个运算符的运行先后。

第四章
本章介绍数组、字符串、string类简介、结构简介、共用体、枚举、指针和自由储存空间、指针、数组和指针算术、类型结合和数组等内容，在C语言中我们已经较多使用过数组以实现一些数据的存储和调用。和C语言相似，C++运用数组也是可以执行这一功能。而本章如何使用字符数组和字符指针。同时还引入结构体的概念，允许创建自定义的复合数据类型，书中详细说明了指针的运用。

前四章都是基于已学的C语言知识，引入C++的一些内容，与C语言对比和联系。

第十六章
本章引入了string类、vector和STL对字符串的处理，这些都是C++里面能够帮助我们简化编程复杂程度的一些库。从这C++和C语言对字符串处理的对比，可以看出c++方便太多了。介绍迭代器、容器这一类的概念。这些都是面向对象的编程思想

第十七章
本章学习了C++的I/O，学习C++如何对文件进行管理、输入和输出。其它的还有如何追加数据、使用二进制文件、获得对文件的随机访问权以及用I/O方法读取写入字符串。通过本章了解ifstream、ofstream这些流的操作，并且对比了C语言和C++的文件打开方式。最后以非常简答的例子介绍了内核格式化。