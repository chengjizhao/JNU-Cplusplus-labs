阅读《C++ primer plus》总结：
1、第一章：
 C++简介：介绍了C++的起源和发展，解释了C++与C语言的关系。
 编写简单的C++程序：讲解了如何编写一个简单的C++程序，包括包含头文件等基本概念。
2、第二章：
创建C++程序。
C++程序的一般格式。
#include编译指令，eg:C++使用iostream，调用计算得函数时加上cmatch。
main()函数。
使用cout 对象进行输出。
在 C++程序中加入注释（主要使用//）。
何时以及如何使用 endl（起到换行作用）。
声明和使用变量。
使用cout 对象进行输出。使用 cin 对象进行输入。注意using namespace std的使用可以减小工作量。
定义和使用简单函数，注意引用时函数要加上“；”号。
尤其注意C++对大小写敏感，也就是说区分大写字符和小写字符。
这些内容为读者深入理解C++的数据处理和运算提供了基础，并为后续章节中更复杂的概念和技术打下了坚实的基础。
3、第三章：
C++变量提倡有一定含义的变量名，重要的是在名称中只能使用字母字符、数字和下划线 (_)、名称的第一个字符不能是数字。
C++内置的整型--unsigned long、long、unsignedint、int、unsigned shortshort、 char、unsigned char、 signed char 和 bool.C++11新增的整型:unsignedlonglong和longlongo
表示各种整型的系统限制的 climits 文件。
各种整型的数字字面值 (常量，C++可以用3种不同的方式书写整数：基数10/8/16)。
使用 const 限定符来创建符号常量(常量被初始化后其值就被固定了)。
C++内置的浮点类型:float、double 和long double。
表示各种浮点类型的系统限制的 cfloat 文件。
各种浮点类型的数字字面值。
C++的算术运算符（+、-、*、/、%），注意优先级的使用。
自动类型转换、强制类型转换等等。
4、第四章：
数组的创建注意，存储在每个元素中的值的类型；数组名;数组中的元素数。
创建和使用C-风格字符串（存储在连续字节中的一系列字符意味着可以将字符串存储在 char 数组中，其中每个字符都位于自己的数组元素中。）。
创建和使用string类字符串、使用方法getline()和get()读取字符串。
（可以使用C-风格字符串来初始化string对象。可以使用cin来将键盘输入存储到string对象中。
可以使用cout来显示string对象。可以使用数组表示法来访问存储在string对象中的字符。）
创建和使用结构体和共用体。（结构是用户定义的类型，而结构声明定义了这种类型的数据属性。
 定义了类型后，便可以创建这种类型的变量。因此创建结构包括两步。首先，定义结
 构描述一它描述并标记了能够存储在结构中的各种数据类型。然后按描述创建结构变量。）
创建和使用枚举（C++的enum工具提供了另一种创建符号常量的方式，这种方式可以代替 const。它还允许定义新类型但必须按严格的限制进行）。
创建和使用指针（信息存储在何处;存储的值为多少;存储的信息是什么类型；变量应用地址运算符 &）。
使用new和delete 管理动态内存、自动存储、静态存储和动态存储、vector和array 类简介。
5、第十六章：
标准C++string类（string类是由头文件 string支持的(注意，头文件 string.h 和cstring 支持对 C-风格字符串进行操纵的C库字符串函数，但不支持 string 类)。）
模板auto_ptr、unique_ptr 和 shared_ptro标准模板库(STL)。需要注意的是，unique_ptr为何优于auto_ptr。
容器类、迭代器（迭代器是理解 STL的关键所在。模板使得算法独立于存储的数据类型，而选代器使算法独立于使用的容器类型。它们都是 STL 通用方法的重要组成部分）。
函数对象(functor)。（函数符自适应性的意义在于:函数适配器对象可以使用函数对象，并认为存在这些 typedef 成员。例如接受一个自适应函数符参数的函数可以使用 result type 成员来声明一个与函数的返回类型匹配的变量）
STL算法。（STL通用、灵活的设计将节省大量工作）
模板 initializer list。（vector、valarray 和 array）
6、第十七章：
fstream 文件提供了将iostream 方法扩展到文件I/0的类定义。ifstream 类是从istream 类派生而来的。通过将ifstream对象与文件关联起来，
可以使用所有的istream 方法来读取文件。同样，通过将ofstream对象与文件关联起来，可以使用ostream 方法来写文件通过将 stream 对象
与文件关联起来，可以将输入和输出方法用于文件。
C++通过将一个被缓冲流同程序及其输入源相连来处理输入。同样，C++也通过将一个被缓冲流与程序及其输出目标相连来处理输出。
iostream和fstream文件构成了IO类库，该类库定义了大量用于管理流的类。

